"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TemplateValidationNotice;
var _react = require("react");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _data = require("@wordpress/data");
var _element = require("@wordpress/element");
var _blockEditor = require("@wordpress/block-editor");
/**
 * WordPress dependencies
 */

function TemplateValidationNotice() {
  const [showConfirmDialog, setShowConfirmDialog] = (0, _element.useState)(false);
  const isValid = (0, _data.useSelect)(select => {
    return select(_blockEditor.store).isValidTemplate();
  }, []);
  const {
    setTemplateValidity,
    synchronizeTemplate
  } = (0, _data.useDispatch)(_blockEditor.store);
  if (isValid) {
    return null;
  }
  return (0, _react.createElement)(_react.Fragment, null, (0, _react.createElement)(_components.Notice, {
    className: "editor-template-validation-notice",
    isDismissible: false,
    status: "warning",
    actions: [{
      label: (0, _i18n.__)('Keep it as is'),
      onClick: () => setTemplateValidity(true)
    }, {
      label: (0, _i18n.__)('Reset the template'),
      onClick: () => setShowConfirmDialog(true)
    }]
  }, (0, _i18n.__)('The content of your post doesnâ€™t match the template assigned to your post type.')), (0, _react.createElement)(_components.__experimentalConfirmDialog, {
    isOpen: showConfirmDialog,
    confirmButtonText: (0, _i18n.__)('Reset'),
    onConfirm: () => {
      setShowConfirmDialog(false);
      synchronizeTemplate();
    },
    onCancel: () => setShowConfirmDialog(false)
  }, (0, _i18n.__)('Resetting the template may result in loss of content, do you want to continue?')));
}
//# sourceMappingURL=index.js.map