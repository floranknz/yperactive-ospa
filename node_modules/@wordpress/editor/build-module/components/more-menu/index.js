import { createElement, Fragment } from "react";
/**
 * WordPress dependencies
 */
import { __, _x } from '@wordpress/i18n';
import { useSelect, useDispatch } from '@wordpress/data';
import { displayShortcut } from '@wordpress/keycodes';
import { external, moreVertical } from '@wordpress/icons';
import { MenuGroup, MenuItem, VisuallyHidden, DropdownMenu } from '@wordpress/components';
import { PreferenceToggleMenuItem, store as preferencesStore } from '@wordpress/preferences';
import { store as interfaceStore, ActionItem } from '@wordpress/interface';

/**
 * Internal dependencies
 */
import CopyContentMenuItem from './copy-content-menu-item';
import ModeSwitcher from '../mode-switcher';
import ToolsMoreMenuGroup from './tools-more-menu-group';
import ViewMoreMenuGroup from './view-more-menu-group';
import { store as editorStore } from '../../store';
export default function MoreMenu() {
  const {
    openModal
  } = useDispatch(interfaceStore);
  const {
    set: setPreference
  } = useDispatch(preferencesStore);
  const {
    toggleDistractionFree
  } = useDispatch(editorStore);
  const showIconLabels = useSelect(select => select(preferencesStore).get('core', 'showIconLabels'), []);
  const turnOffDistractionFree = () => {
    setPreference('core', 'distractionFree', false);
  };
  return createElement(Fragment, null, createElement(DropdownMenu, {
    icon: moreVertical,
    label: __('Options'),
    popoverProps: {
      placement: 'bottom-end',
      className: 'more-menu-dropdown__content'
    },
    toggleProps: {
      showTooltip: !showIconLabels,
      ...(showIconLabels && {
        variant: 'tertiary'
      }),
      tooltipPosition: 'bottom',
      size: 'compact'
    }
  }, ({
    onClose
  }) => createElement(Fragment, null, createElement(MenuGroup, {
    label: _x('View', 'noun')
  }, createElement(PreferenceToggleMenuItem, {
    scope: "core",
    name: "fixedToolbar",
    onToggle: turnOffDistractionFree,
    label: __('Top toolbar'),
    info: __('Access all block and document tools in a single place'),
    messageActivated: __('Top toolbar activated'),
    messageDeactivated: __('Top toolbar deactivated')
  }), createElement(PreferenceToggleMenuItem, {
    scope: "core",
    name: "distractionFree",
    label: __('Distraction free'),
    info: __('Write with calmness'),
    handleToggling: false,
    onToggle: toggleDistractionFree,
    messageActivated: __('Distraction free mode activated'),
    messageDeactivated: __('Distraction free mode deactivated'),
    shortcut: displayShortcut.primaryShift('\\')
  }), createElement(PreferenceToggleMenuItem, {
    scope: "core",
    name: "focusMode",
    label: __('Spotlight mode'),
    info: __('Focus on one block at a time'),
    messageActivated: __('Spotlight mode activated'),
    messageDeactivated: __('Spotlight mode deactivated')
  }), createElement(ViewMoreMenuGroup.Slot, {
    fillProps: {
      onClose
    }
  })), createElement(ModeSwitcher, null), createElement(ActionItem.Slot, {
    name: "core/plugin-more-menu",
    label: __('Plugins'),
    as: MenuGroup,
    fillProps: {
      onClick: onClose
    }
  }), createElement(MenuGroup, {
    label: __('Tools')
  }, createElement(MenuItem, {
    onClick: () => openModal('editor/keyboard-shortcut-help'),
    shortcut: displayShortcut.access('h')
  }, __('Keyboard shortcuts')), createElement(CopyContentMenuItem, null), createElement(MenuItem, {
    icon: external,
    href: __('https://wordpress.org/documentation/article/wordpress-block-editor/'),
    target: "_blank",
    rel: "noopener noreferrer"
  }, __('Help'), createElement(VisuallyHidden, {
    as: "span"
  }, /* translators: accessibility text */
  __('(opens in a new tab)'))), createElement(ToolsMoreMenuGroup.Slot, {
    fillProps: {
      onClose
    }
  })), createElement(MenuGroup, null, createElement(MenuItem, {
    onClick: () => openModal('editor/preferences')
  }, __('Preferences'))))));
}
//# sourceMappingURL=index.js.map