{"version":3,"names":["Textarea","__","store","coreStore","useMemo","__unstableSerializeAndClean","useDispatch","useSelect","useInstanceId","VisuallyHidden","editorStore","PostTextEditor","instanceId","content","blocks","type","id","select","getEditedEntityRecord","getCurrentPostType","getCurrentPostId","_type","_id","editedRecord","editEntityRecord","value","Function","createElement","Fragment","as","htmlFor","autoComplete","dir","onChange","event","target","undefined","selection","className","placeholder"],"sources":["@wordpress/editor/src/components/post-text-editor/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport { __unstableSerializeAndClean } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { VisuallyHidden } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostTextEditor() {\n\tconst instanceId = useInstanceId( PostTextEditor );\n\tconst { content, blocks, type, id } = useSelect( ( select ) => {\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst _type = getCurrentPostType();\n\t\tconst _id = getCurrentPostId();\n\t\tconst editedRecord = getEditedEntityRecord( 'postType', _type, _id );\n\n\t\treturn {\n\t\t\tcontent: editedRecord?.content,\n\t\t\tblocks: editedRecord?.blocks,\n\t\t\ttype: _type,\n\t\t\tid: _id,\n\t\t};\n\t}, [] );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\t// Replicates the logic found in getEditedPostContent().\n\tconst value = useMemo( () => {\n\t\tif ( content instanceof Function ) {\n\t\t\treturn content( { blocks } );\n\t\t} else if ( blocks ) {\n\t\t\t// If we have parsed blocks already, they should be our source of truth.\n\t\t\t// Parsing applies block deprecations and legacy block conversions that\n\t\t\t// unparsed content will not have.\n\t\t\treturn __unstableSerializeAndClean( blocks );\n\t\t}\n\t\treturn content;\n\t}, [ content, blocks ] );\n\n\treturn (\n\t\t<>\n\t\t\t<VisuallyHidden\n\t\t\t\tas=\"label\"\n\t\t\t\thtmlFor={ `post-content-${ instanceId }` }\n\t\t\t>\n\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t</VisuallyHidden>\n\t\t\t<Textarea\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tdir=\"auto\"\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ ( event ) => {\n\t\t\t\t\teditEntityRecord( 'postType', type, id, {\n\t\t\t\t\t\tcontent: event.target.value,\n\t\t\t\t\t\tblocks: undefined,\n\t\t\t\t\t\tselection: undefined,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t/>\n\t\t</>\n\t);\n}\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,yBAAyB;;AAE9C;AACA;AACA;AACA,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,KAAK,IAAIC,SAAS,QAAQ,sBAAsB;AACzD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,2BAA2B,QAAQ,mBAAmB;AAC/D,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;AACA;AACA;AACA,SAASP,KAAK,IAAIQ,WAAW,QAAQ,aAAa;AAElD,eAAe,SAASC,cAAcA,CAAA,EAAG;EACxC,MAAMC,UAAU,GAAGJ,aAAa,CAAEG,cAAe,CAAC;EAClD,MAAM;IAAEE,OAAO;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAIU,MAAM,IAAM;IAC9D,MAAM;MAAEC;IAAsB,CAAC,GAAGD,MAAM,CAAEd,SAAU,CAAC;IACrD,MAAM;MAAEgB,kBAAkB;MAAEC;IAAiB,CAAC,GAAGH,MAAM,CAAEP,WAAY,CAAC;IACtE,MAAMW,KAAK,GAAGF,kBAAkB,CAAC,CAAC;IAClC,MAAMG,GAAG,GAAGF,gBAAgB,CAAC,CAAC;IAC9B,MAAMG,YAAY,GAAGL,qBAAqB,CAAE,UAAU,EAAEG,KAAK,EAAEC,GAAI,CAAC;IAEpE,OAAO;MACNT,OAAO,EAAEU,YAAY,EAAEV,OAAO;MAC9BC,MAAM,EAAES,YAAY,EAAET,MAAM;MAC5BC,IAAI,EAAEM,KAAK;MACXL,EAAE,EAAEM;IACL,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EACP,MAAM;IAAEE;EAAiB,CAAC,GAAGlB,WAAW,CAAEH,SAAU,CAAC;EACrD;EACA,MAAMsB,KAAK,GAAGrB,OAAO,CAAE,MAAM;IAC5B,IAAKS,OAAO,YAAYa,QAAQ,EAAG;MAClC,OAAOb,OAAO,CAAE;QAAEC;MAAO,CAAE,CAAC;IAC7B,CAAC,MAAM,IAAKA,MAAM,EAAG;MACpB;MACA;MACA;MACA,OAAOT,2BAA2B,CAAES,MAAO,CAAC;IAC7C;IACA,OAAOD,OAAO;EACf,CAAC,EAAE,CAAEA,OAAO,EAAEC,MAAM,CAAG,CAAC;EAExB,OACCa,aAAA,CAAAC,QAAA,QACCD,aAAA,CAAClB,cAAc;IACdoB,EAAE,EAAC,OAAO;IACVC,OAAO,EAAI,gBAAgBlB,UAAY;EAAG,GAExCX,EAAE,CAAE,mBAAoB,CACX,CAAC,EACjB0B,aAAA,CAAC3B,QAAQ;IACR+B,YAAY,EAAC,KAAK;IAClBC,GAAG,EAAC,MAAM;IACVP,KAAK,EAAGA,KAAO;IACfQ,QAAQ,EAAKC,KAAK,IAAM;MACvBV,gBAAgB,CAAE,UAAU,EAAET,IAAI,EAAEC,EAAE,EAAE;QACvCH,OAAO,EAAEqB,KAAK,CAACC,MAAM,CAACV,KAAK;QAC3BX,MAAM,EAAEsB,SAAS;QACjBC,SAAS,EAAED;MACZ,CAAE,CAAC;IACJ,CAAG;IACHE,SAAS,EAAC,yBAAyB;IACnCtB,EAAE,EAAI,gBAAgBJ,UAAY,EAAG;IACrC2B,WAAW,EAAGtC,EAAE,CAAE,iCAAkC;EAAG,CACvD,CACA,CAAC;AAEL","ignoreList":[]}