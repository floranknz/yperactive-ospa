import { createElement, Fragment } from "react";
/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { RadioControl, __experimentalText as Text, __experimentalVStack as VStack } from '@wordpress/components';
import { useDispatch, useSelect } from '@wordpress/data';

/**
 * Internal dependencies
 */
import { store as editorStore } from '../../store';
const COMMENT_OPTIONS = [{
  label: createElement(Fragment, null, __('Open'), createElement(Text, {
    variant: "muted",
    size: 12
  }, __('Visitors can add new comments and replies.'))),
  value: 'open'
}, {
  label: createElement(Fragment, null, __('Closed'), createElement(Text, {
    variant: "muted",
    size: 12
  }, __('Visitors cannot add new comments or replies.')), createElement(Text, {
    variant: "muted",
    size: 12
  }, __('Existing comments remain visible.'))),
  value: 'closed'
}];
function PostComments() {
  const commentStatus = useSelect(select => {
    var _select$getEditedPost;
    return (_select$getEditedPost = select(editorStore).getEditedPostAttribute('comment_status')) !== null && _select$getEditedPost !== void 0 ? _select$getEditedPost : 'open';
  }, []);
  const {
    editPost
  } = useDispatch(editorStore);
  const handleStatus = newCommentStatus => editPost({
    comment_status: newCommentStatus
  });
  return createElement("form", null, createElement(VStack, {
    spacing: 4
  }, createElement(RadioControl, {
    className: "editor-change-status__options",
    hideLabelFromVision: true,
    label: __('Comment status'),
    options: COMMENT_OPTIONS,
    onChange: handleStatus,
    selected: commentStatus
  })));
}
export default PostComments;
//# sourceMappingURL=index.js.map