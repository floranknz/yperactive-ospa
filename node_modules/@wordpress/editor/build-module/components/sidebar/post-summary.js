import { createElement, Fragment } from "react";
/**
 * WordPress dependencies
 */
import { __experimentalVStack as VStack } from '@wordpress/components';
import { useSelect } from '@wordpress/data';

/**
 * Internal dependencies
 */
import PluginPostStatusInfo from '../plugin-post-status-info';
import PostActions from '../post-actions';
import PostAuthorPanel from '../post-author/panel';
import PostCardPanel from '../post-card-panel';
import PostContentInformation from '../post-content-information';
import PostDiscussionPanel from '../post-discussion/panel';
import { PrivatePostExcerptPanel as PostExcerptPanel } from '../post-excerpt/panel';
import PostFeaturedImagePanel from '../post-featured-image/panel';
import PostFormatPanel from '../post-format/panel';
import PostLastEditedPanel from '../post-last-edited-panel';
import PostPanelSection from '../post-panel-section';
import PostSchedulePanel from '../post-schedule/panel';
import PostStatusPanel from '../post-status';
import PostStickyPanel from '../post-sticky';
import PostSyncStatus from '../post-sync-status';
import PostTemplatePanel from '../post-template/panel';
import PostTrashPanel from '../post-trash/panel';
import PostURLPanel from '../post-url/panel';
import { store as editorStore } from '../../store';
import { NAVIGATION_POST_TYPE, PATTERN_POST_TYPE, TEMPLATE_PART_POST_TYPE, TEMPLATE_POST_TYPE } from '../../store/constants';
import TemplateAreas from '../template-areas';

/**
 * Module Constants
 */
const PANEL_NAME = 'post-status';
export default function PostSummary({
  onActionPerformed
}) {
  const {
    isRemovedPostStatusPanel,
    postType
  } = useSelect(select => {
    // We use isEditorPanelRemoved to hide the panel if it was programatically removed. We do
    // not use isEditorPanelEnabled since this panel should not be disabled through the UI.
    const {
      isEditorPanelRemoved,
      getCurrentPostType
    } = select(editorStore);
    return {
      isRemovedPostStatusPanel: isEditorPanelRemoved(PANEL_NAME),
      postType: getCurrentPostType()
    };
  }, []);
  const isPattern = postType === PATTERN_POST_TYPE;
  const isTemplate = postType === TEMPLATE_POST_TYPE;
  const isTemplatePart = postType === TEMPLATE_PART_POST_TYPE;
  const isNavigation = postType === NAVIGATION_POST_TYPE;
  return createElement(PostPanelSection, {
    className: "editor-post-summary"
  }, createElement(PluginPostStatusInfo.Slot, null, fills => createElement(Fragment, null, createElement(VStack, {
    spacing: 4
  }, createElement(PostCardPanel, {
    actions: createElement(PostActions, {
      onActionPerformed: onActionPerformed
    })
  }), createElement(PostFeaturedImagePanel, {
    withPanelBody: false
  }), createElement(PostExcerptPanel, null), createElement(VStack, {
    spacing: 1
  }, createElement(PostContentInformation, null), createElement(PostLastEditedPanel, null)), !isRemovedPostStatusPanel && createElement(VStack, {
    spacing: 2
  }, createElement(VStack, {
    spacing: 1
  }, createElement(PostStatusPanel, null), createElement(PostSchedulePanel, null), createElement(PostTemplatePanel, null), createElement(PostURLPanel, null), createElement(PostDiscussionPanel, null), createElement(PostSyncStatus, null)), createElement(PostStickyPanel, null), createElement(PostFormatPanel, null), createElement(PostAuthorPanel, null), isTemplate && createElement(TemplateAreas, null), fills, !isPattern && !isTemplate && !isTemplatePart && !isNavigation && createElement(PostTrashPanel, null))))));
}
//# sourceMappingURL=post-summary.js.map