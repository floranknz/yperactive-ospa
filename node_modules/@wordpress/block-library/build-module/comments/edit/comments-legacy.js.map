{"version":3,"names":["clsx","AlignmentControl","BlockControls","Warning","useBlockProps","__","Button","Placeholder","CommentsLegacy","attributes","setAttributes","context","postType","postId","textAlign","actions","createElement","key","onClick","legacy","variant","blockProps","className","Fragment","group","value","onChange","nextAlign"],"sources":["@wordpress/block-library/src/comments/edit/comments-legacy.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport Placeholder from './placeholder';\n\nexport default function CommentsLegacy( {\n\tattributes,\n\tsetAttributes,\n\tcontext: { postType, postId },\n} ) {\n\tconst { textAlign } = attributes;\n\n\tconst actions = [\n\t\t<Button\n\t\t\tkey=\"convert\"\n\t\t\tonClick={ () => void setAttributes( { legacy: false } ) }\n\t\t\tvariant=\"primary\"\n\t\t>\n\t\t\t{ __( 'Switch to editable mode' ) }\n\t\t</Button>,\n\t];\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: clsx( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Warning actions={ actions }>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Comments block: Youâ€™re currently using the legacy version of the block. ' +\n\t\t\t\t\t\t\t'The following is just a placeholder - the final styling will likely look different. ' +\n\t\t\t\t\t\t\t'For a better representation and more customization options, ' +\n\t\t\t\t\t\t\t'switch the block to its editable mode.'\n\t\t\t\t\t) }\n\t\t\t\t</Warning>\n\t\t\t\t<Placeholder postId={ postId } postType={ postType } />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SACCC,gBAAgB,EAChBC,aAAa,EACbC,OAAO,EACPC,aAAa,QACP,yBAAyB;AAChC,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,MAAM,QAAQ,uBAAuB;;AAE9C;AACA;AACA;AACA,OAAOC,WAAW,MAAM,eAAe;AAEvC,eAAe,SAASC,cAAcA,CAAE;EACvCC,UAAU;EACVC,aAAa;EACbC,OAAO,EAAE;IAAEC,QAAQ;IAAEC;EAAO;AAC7B,CAAC,EAAG;EACH,MAAM;IAAEC;EAAU,CAAC,GAAGL,UAAU;EAEhC,MAAMM,OAAO,GAAG,CACfC,aAAA,CAACV,MAAM;IACNW,GAAG,EAAC,SAAS;IACbC,OAAO,EAAGA,CAAA,KAAM,KAAKR,aAAa,CAAE;MAAES,MAAM,EAAE;IAAM,CAAE,CAAG;IACzDC,OAAO,EAAC;EAAS,GAEff,EAAE,CAAE,yBAA0B,CACzB,CAAC,CACT;EAED,MAAMgB,UAAU,GAAGjB,aAAa,CAAE;IACjCkB,SAAS,EAAEtB,IAAI,CAAE;MAChB,CAAG,kBAAkBc,SAAW,EAAC,GAAIA;IACtC,CAAE;EACH,CAAE,CAAC;EAEH,OACCE,aAAA,CAAAO,QAAA,QACCP,aAAA,CAACd,aAAa;IAACsB,KAAK,EAAC;EAAO,GAC3BR,aAAA,CAACf,gBAAgB;IAChBwB,KAAK,EAAGX,SAAW;IACnBY,QAAQ,EAAKC,SAAS,IAAM;MAC3BjB,aAAa,CAAE;QAAEI,SAAS,EAAEa;MAAU,CAAE,CAAC;IAC1C;EAAG,CACH,CACa,CAAC,EAEhBX,aAAA;IAAA,GAAUK;EAAU,GACnBL,aAAA,CAACb,OAAO;IAACY,OAAO,EAAGA;EAAS,GACzBV,EAAE,CACH,0EAA0E,GACzE,sFAAsF,GACtF,8DAA8D,GAC9D,wCACF,CACQ,CAAC,EACVW,aAAA,CAACT,WAAW;IAACM,MAAM,EAAGA,MAAQ;IAACD,QAAQ,EAAGA;EAAU,CAAE,CAClD,CACJ,CAAC;AAEL","ignoreList":[]}