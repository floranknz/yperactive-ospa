{"version":3,"names":["__","PanelBody","ToggleControl","InspectorControls","useBlockProps","ENTER","getDefaultBlockName","createBlock","DEFAULT_TEXT","MoreEdit","attributes","customText","noTeaser","insertBlocksAfter","setAttributes","onChangeInput","event","target","value","undefined","onKeyDown","keyCode","getHideExcerptHelp","checked","toggleHideExcerpt","style","width","length","createElement","Fragment","__nextHasNoMarginBottom","label","onChange","help","type","placeholder"],"sources":["@wordpress/block-library/src/more/edit.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, ToggleControl } from '@wordpress/components';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { ENTER } from '@wordpress/keycodes';\nimport { getDefaultBlockName, createBlock } from '@wordpress/blocks';\n\nconst DEFAULT_TEXT = __( 'Read more' );\n\nexport default function MoreEdit( {\n\tattributes: { customText, noTeaser },\n\tinsertBlocksAfter,\n\tsetAttributes,\n} ) {\n\tconst onChangeInput = ( event ) => {\n\t\tsetAttributes( {\n\t\t\tcustomText:\n\t\t\t\tevent.target.value !== '' ? event.target.value : undefined,\n\t\t} );\n\t};\n\n\tconst onKeyDown = ( { keyCode } ) => {\n\t\tif ( keyCode === ENTER ) {\n\t\t\tinsertBlocksAfter( [ createBlock( getDefaultBlockName() ) ] );\n\t\t}\n\t};\n\n\tconst getHideExcerptHelp = ( checked ) =>\n\t\tchecked\n\t\t\t? __( 'The excerpt is hidden.' )\n\t\t\t: __( 'The excerpt is visible.' );\n\n\tconst toggleHideExcerpt = () => setAttributes( { noTeaser: ! noTeaser } );\n\n\tconst style = {\n\t\twidth: `${ ( customText ? customText : DEFAULT_TEXT ).length + 1.2 }em`,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t'Hide the excerpt on the full content page'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tchecked={ !! noTeaser }\n\t\t\t\t\t\tonChange={ toggleHideExcerpt }\n\t\t\t\t\t\thelp={ getHideExcerptHelp }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...useBlockProps() }>\n\t\t\t\t<input\n\t\t\t\t\taria-label={ __( '“Read more” link text' ) }\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={ customText }\n\t\t\t\t\tplaceholder={ DEFAULT_TEXT }\n\t\t\t\t\tonChange={ onChangeInput }\n\t\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\t\tstyle={ style }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SAASC,SAAS,EAAEC,aAAa,QAAQ,uBAAuB;AAChE,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,yBAAyB;AAC1E,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,mBAAmB;AAEpE,MAAMC,YAAY,GAAGR,EAAE,CAAE,WAAY,CAAC;AAEtC,eAAe,SAASS,QAAQA,CAAE;EACjCC,UAAU,EAAE;IAAEC,UAAU;IAAEC;EAAS,CAAC;EACpCC,iBAAiB;EACjBC;AACD,CAAC,EAAG;EACH,MAAMC,aAAa,GAAKC,KAAK,IAAM;IAClCF,aAAa,CAAE;MACdH,UAAU,EACTK,KAAK,CAACC,MAAM,CAACC,KAAK,KAAK,EAAE,GAAGF,KAAK,CAACC,MAAM,CAACC,KAAK,GAAGC;IACnD,CAAE,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAE;IAAEC;EAAQ,CAAC,KAAM;IACpC,IAAKA,OAAO,KAAKhB,KAAK,EAAG;MACxBQ,iBAAiB,CAAE,CAAEN,WAAW,CAAED,mBAAmB,CAAC,CAAE,CAAC,CAAG,CAAC;IAC9D;EACD,CAAC;EAED,MAAMgB,kBAAkB,GAAKC,OAAO,IACnCA,OAAO,GACJvB,EAAE,CAAE,wBAAyB,CAAC,GAC9BA,EAAE,CAAE,yBAA0B,CAAC;EAEnC,MAAMwB,iBAAiB,GAAGA,CAAA,KAAMV,aAAa,CAAE;IAAEF,QAAQ,EAAE,CAAEA;EAAS,CAAE,CAAC;EAEzE,MAAMa,KAAK,GAAG;IACbC,KAAK,EAAG,GAAG,CAAEf,UAAU,GAAGA,UAAU,GAAGH,YAAY,EAAGmB,MAAM,GAAG,GAAK;EACrE,CAAC;EAED,OACCC,aAAA,CAAAC,QAAA,QACCD,aAAA,CAACzB,iBAAiB,QACjByB,aAAA,CAAC3B,SAAS,QACT2B,aAAA,CAAC1B,aAAa;IACb4B,uBAAuB;IACvBC,KAAK,EAAG/B,EAAE,CACT,2CACD,CAAG;IACHuB,OAAO,EAAG,CAAC,CAAEX,QAAU;IACvBoB,QAAQ,EAAGR,iBAAmB;IAC9BS,IAAI,EAAGX;EAAoB,CAC3B,CACS,CACO,CAAC,EACpBM,aAAA;IAAA,GAAUxB,aAAa,CAAC;EAAC,GACxBwB,aAAA;IACC,cAAa5B,EAAE,CAAE,uBAAwB,CAAG;IAC5CkC,IAAI,EAAC,MAAM;IACXhB,KAAK,EAAGP,UAAY;IACpBwB,WAAW,EAAG3B,YAAc;IAC5BwB,QAAQ,EAAGjB,aAAe;IAC1BK,SAAS,EAAGA,SAAW;IACvBK,KAAK,EAAGA;EAAO,CACf,CACG,CACJ,CAAC;AAEL","ignoreList":[]}