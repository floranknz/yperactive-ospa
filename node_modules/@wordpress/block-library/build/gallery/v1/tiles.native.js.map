{"version":3,"names":["_reactNative","require","_element","_tilesStyles","_interopRequireDefault","Tiles","props","columns","children","spacing","style","compose","StyleSheet","tileCount","Children","count","lastTile","lastRow","Math","floor","wrappedChildren","map","child","index","row","rowLength","indexInRow","_react","createElement","View","styles","tileStyle","width","paddingLeft","paddingRight","paddingTop","paddingBottom","containerStyle","_default","exports","default"],"sources":["@wordpress/block-library/src/gallery/v1/tiles.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { View, StyleSheet } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Children } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport styles from './tiles-styles.scss';\n\nfunction Tiles( props ) {\n\tconst { columns, children, spacing = 10, style } = props;\n\n\tconst { compose } = StyleSheet;\n\n\tconst tileCount = Children.count( children );\n\tconst lastTile = tileCount - 1;\n\tconst lastRow = Math.floor( lastTile / columns );\n\n\tconst wrappedChildren = Children.map( children, ( child, index ) => {\n\t\t/**\n\t\t * Since we don't have `calc()`, we must calculate our spacings here in\n\t\t * order to preserve even spacing between tiles and equal width for tiles\n\t\t * in a given row.\n\t\t *\n\t\t * In order to ensure equal sizing of tile contents, we distribute the\n\t\t * spacing such that each tile has an equal \"share\" of the fixed spacing. To\n\t\t * keep the tiles properly aligned within their rows, we calculate the left\n\t\t * and right paddings based on the tile's relative position within the row.\n\t\t *\n\t\t * Note: we use padding instead of margins so that the fixed spacing is\n\t\t * included within the relative spacing (i.e. width percentage), and\n\t\t * wrapping behavior is preserved.\n\t\t *\n\t\t *  - The left most tile in a row must have left padding of zero.\n\t\t *  - The right most tile in a row must have a right padding of zero.\n\t\t *\n\t\t * The values of these left and right paddings are interpolated for tiles in\n\t\t * between. The right padding is complementary with the left padding of the\n\t\t * next tile (i.e. the right padding of [tile n] + the left padding of\n\t\t * [tile n + 1] will be equal for all tiles except the last one in a given\n\t\t * row).\n\t\t */\n\n\t\tconst row = Math.floor( index / columns );\n\t\tconst rowLength =\n\t\t\trow === lastRow ? ( lastTile % columns ) + 1 : columns;\n\t\tconst indexInRow = index % columns;\n\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tstyles.tileStyle,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: `${ 100 / rowLength }%`,\n\t\t\t\t\t\tpaddingLeft: spacing * ( indexInRow / rowLength ),\n\t\t\t\t\t\tpaddingRight:\n\t\t\t\t\t\t\tspacing * ( 1 - ( indexInRow + 1 ) / rowLength ),\n\t\t\t\t\t\tpaddingTop: row === 0 ? 0 : spacing / 2,\n\t\t\t\t\t\tpaddingBottom: row === lastRow ? 0 : spacing / 2,\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ child }\n\t\t\t</View>\n\t\t);\n\t} );\n\n\tconst containerStyle = compose( styles.containerStyle, style );\n\n\treturn <View style={ containerStyle }>{ wrappedChildren }</View>;\n}\n\nexport default Tiles;\n"],"mappings":";;;;;;;;AAGA,IAAAA,YAAA,GAAAC,OAAA;AAKA,IAAAC,QAAA,GAAAD,OAAA;AAKA,IAAAE,YAAA,GAAAC,sBAAA,CAAAH,OAAA;AAbA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAGA,SAASI,KAAKA,CAAEC,KAAK,EAAG;EACvB,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,OAAO,GAAG,EAAE;IAAEC;EAAM,CAAC,GAAGJ,KAAK;EAExD,MAAM;IAAEK;EAAQ,CAAC,GAAGC,uBAAU;EAE9B,MAAMC,SAAS,GAAGC,iBAAQ,CAACC,KAAK,CAAEP,QAAS,CAAC;EAC5C,MAAMQ,QAAQ,GAAGH,SAAS,GAAG,CAAC;EAC9B,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEH,QAAQ,GAAGT,OAAQ,CAAC;EAEhD,MAAMa,eAAe,GAAGN,iBAAQ,CAACO,GAAG,CAAEb,QAAQ,EAAE,CAAEc,KAAK,EAAEC,KAAK,KAAM;IACnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEE,MAAMC,GAAG,GAAGN,IAAI,CAACC,KAAK,CAAEI,KAAK,GAAGhB,OAAQ,CAAC;IACzC,MAAMkB,SAAS,GACdD,GAAG,KAAKP,OAAO,GAAKD,QAAQ,GAAGT,OAAO,GAAK,CAAC,GAAGA,OAAO;IACvD,MAAMmB,UAAU,GAAGH,KAAK,GAAGhB,OAAO;IAElC,OACC,IAAAoB,MAAA,CAAAC,aAAA,EAAC5B,YAAA,CAAA6B,IAAI;MACJnB,KAAK,EAAG,CACPoB,oBAAM,CAACC,SAAS,EAChB;QACCC,KAAK,EAAG,GAAG,GAAG,GAAGP,SAAW,GAAE;QAC9BQ,WAAW,EAAExB,OAAO,IAAKiB,UAAU,GAAGD,SAAS,CAAE;QACjDS,YAAY,EACXzB,OAAO,IAAK,CAAC,GAAG,CAAEiB,UAAU,GAAG,CAAC,IAAKD,SAAS,CAAE;QACjDU,UAAU,EAAEX,GAAG,KAAK,CAAC,GAAG,CAAC,GAAGf,OAAO,GAAG,CAAC;QACvC2B,aAAa,EAAEZ,GAAG,KAAKP,OAAO,GAAG,CAAC,GAAGR,OAAO,GAAG;MAChD,CAAC;IACC,GAEDa,KACG,CAAC;EAET,CAAE,CAAC;EAEH,MAAMe,cAAc,GAAG1B,OAAO,CAAEmB,oBAAM,CAACO,cAAc,EAAE3B,KAAM,CAAC;EAE9D,OAAO,IAAAiB,MAAA,CAAAC,aAAA,EAAC5B,YAAA,CAAA6B,IAAI;IAACnB,KAAK,EAAG2B;EAAgB,GAAGjB,eAAuB,CAAC;AACjE;AAAC,IAAAkB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcnC,KAAK","ignoreList":[]}