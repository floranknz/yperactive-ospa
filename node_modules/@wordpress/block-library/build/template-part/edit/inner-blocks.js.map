{"version":3,"names":["_coreData","require","_blockEditor","_data","_element","_blocks","useRenderAppender","hasInnerBlocks","blockEditingMode","useBlockEditingMode","InnerBlocks","ButtonBlockAppender","useLayout","layout","themeSupportsLayout","useSelect","select","getSettings","blockEditorStore","supportsLayout","defaultLayout","useSettings","inherit","NonEditableTemplatePartPreview","postId","id","tagName","TagName","blockProps","content","editedBlocks","getEditedEntityRecord","coreStore","editedRecord","context","blocks","useMemo","undefined","parse","innerBlocksProps","useInnerBlocksProps","value","onInput","onChange","renderAppender","_react","createElement","EditableTemplatePartInnerBlocks","useEntityBlockEditor","TemplatePartInnerBlocks","canViewTemplatePart","canEditTemplatePart","_select$canUser","_select$canUser2","canUser","TemplatePartInnerBlocksComponent"],"sources":["@wordpress/block-library/src/template-part/edit/inner-blocks.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEntityBlockEditor, store as coreStore } from '@wordpress/core-data';\nimport {\n\tInnerBlocks,\n\tuseInnerBlocksProps,\n\tuseSettings,\n\tstore as blockEditorStore,\n\tuseBlockEditingMode,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { parse } from '@wordpress/blocks';\n\nfunction useRenderAppender( hasInnerBlocks ) {\n\tconst blockEditingMode = useBlockEditingMode();\n\t// Disable appending when the editing mode is 'contentOnly'. This is so that the user can't\n\t// append into a template part when editing a page in the site editor. See\n\t// DisableNonPageContentBlocks. Ideally instead of (mis)using editing mode there would be a\n\t// block editor API for achieving this.\n\tif ( blockEditingMode === 'contentOnly' ) {\n\t\treturn false;\n\t}\n\tif ( ! hasInnerBlocks ) {\n\t\treturn InnerBlocks.ButtonBlockAppender;\n\t}\n}\n\nfunction useLayout( layout ) {\n\tconst themeSupportsLayout = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings()?.supportsLayout;\n\t}, [] );\n\tconst [ defaultLayout ] = useSettings( 'layout' );\n\tif ( themeSupportsLayout ) {\n\t\treturn layout?.inherit ? defaultLayout || {} : layout;\n\t}\n}\n\nfunction NonEditableTemplatePartPreview( {\n\tpostId: id,\n\tlayout,\n\ttagName: TagName,\n\tblockProps,\n} ) {\n\tuseBlockEditingMode( 'disabled' );\n\n\tconst { content, editedBlocks } = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! id ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\t\tconst editedRecord = getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_template_part',\n\t\t\t\tid,\n\t\t\t\t{ context: 'view' }\n\t\t\t);\n\t\t\treturn {\n\t\t\t\teditedBlocks: editedRecord.blocks,\n\t\t\t\tcontent: editedRecord.content,\n\t\t\t};\n\t\t},\n\t\t[ id ]\n\t);\n\n\tconst blocks = useMemo( () => {\n\t\tif ( ! id ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ( editedBlocks ) {\n\t\t\treturn editedBlocks;\n\t\t}\n\n\t\tif ( ! content || typeof content !== 'string' ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn parse( content );\n\t}, [ id, editedBlocks, content ] );\n\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tvalue: blocks,\n\t\tonInput: () => {},\n\t\tonChange: () => {},\n\t\trenderAppender: false,\n\t\tlayout: useLayout( layout ),\n\t} );\n\n\treturn <TagName { ...innerBlocksProps } />;\n}\n\nfunction EditableTemplatePartInnerBlocks( {\n\tpostId: id,\n\thasInnerBlocks,\n\tlayout,\n\ttagName: TagName,\n\tblockProps,\n} ) {\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\t'wp_template_part',\n\t\t{ id }\n\t);\n\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tvalue: blocks,\n\t\tonInput,\n\t\tonChange,\n\t\trenderAppender: useRenderAppender( hasInnerBlocks ),\n\t\tlayout: useLayout( layout ),\n\t} );\n\n\treturn <TagName { ...innerBlocksProps } />;\n}\n\nexport default function TemplatePartInnerBlocks( {\n\tpostId: id,\n\thasInnerBlocks,\n\tlayout,\n\ttagName: TagName,\n\tblockProps,\n} ) {\n\tconst { canViewTemplatePart, canEditTemplatePart } = useSelect(\n\t\t( select ) => {\n\t\t\treturn {\n\t\t\t\tcanViewTemplatePart:\n\t\t\t\t\tselect( coreStore ).canUser( 'read', 'templates' ) ?? false,\n\t\t\t\tcanEditTemplatePart:\n\t\t\t\t\tselect( coreStore ).canUser( 'create', 'templates' ) ??\n\t\t\t\t\tfalse,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tif ( ! canViewTemplatePart ) {\n\t\treturn null;\n\t}\n\n\tconst TemplatePartInnerBlocksComponent = canEditTemplatePart\n\t\t? EditableTemplatePartInnerBlocks\n\t\t: NonEditableTemplatePartPreview;\n\n\treturn (\n\t\t<TemplatePartInnerBlocksComponent\n\t\t\tpostId={ id }\n\t\t\thasInnerBlocks={ hasInnerBlocks }\n\t\t\tlayout={ layout }\n\t\t\ttagName={ TagName }\n\t\t\tblockProps={ blockProps }\n\t\t/>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}