{"version":3,"names":["_clsx","_interopRequireDefault","require","_element","_blockEditor","_i18n","_components","_icons","_blocks","_state","ALIGNMENT_CONTROLS","icon","alignLeft","title","__","align","alignCenter","alignRight","cellAriaLabel","head","body","foot","placeholder","TSection","name","props","TagName","_react","createElement","TableEdit","attributes","setAttributes","insertBlocksAfter","isSelected","hasFixedLayout","caption","initialRowCount","setInitialRowCount","useState","initialColumnCount","setInitialColumnCount","selectedCell","setSelectedCell","colorProps","useColorProps","borderProps","useBorderProps","tableRef","useRef","hasTableCreated","setHasTableCreated","onChangeInitialColumnCount","count","onChangeInitialRowCount","onCreateTable","event","preventDefault","createTable","rowCount","parseInt","columnCount","onChangeFixedLayout","onChange","content","updateSelectedCell","cellAttributes","onChangeColumnAlignment","columnSelection","type","columnIndex","newAttributes","getCellAlignment","getCellAttribute","onToggleHeaderSection","toggleSection","onToggleFooterSection","onInsertRow","delta","sectionName","rowIndex","newRowIndex","insertRow","onInsertRowBefore","onInsertRowAfter","onDeleteRow","deleteRow","onInsertColumn","newColumnIndex","insertColumn","onInsertColumnBefore","onInsertColumnAfter","onDeleteColumn","deleteColumn","useEffect","current","querySelector","focus","sections","filter","isEmptyTableSection","tableControls","tableRowBefore","isDisabled","onClick","tableRowAfter","tableRowDelete","tableColumnBefore","tableColumnAfter","tableColumnDelete","renderedSections","map","key","cells","tag","CellTag","scope","colspan","rowspan","undefined","colSpan","rowSpan","className","clsx","RichText","value","onFocus","isEmpty","length","useBlockProps","ref","Fragment","BlockControls","group","AlignmentControl","label","alignmentControls","nextAlign","ToolbarDropdownMenu","hasArrowIndicator","table","controls","InspectorControls","PanelBody","ToggleControl","__nextHasNoMarginBottom","checked","hasSplitBorders","style","border","identifier","tagName","__experimentalGetElementClassName","__unstableOnSplitAtEnd","createBlock","getDefaultBlockName","Placeholder","BlockIcon","showColors","instructions","onSubmit","TextControl","__next40pxDefaultSize","min","Button","variant","_default","exports","default"],"sources":["@wordpress/block-library/src/table/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport {\n\tInspectorControls,\n\tBlockControls,\n\tRichText,\n\tBlockIcon,\n\tAlignmentControl,\n\tuseBlockProps,\n\t__experimentalUseColorProps as useColorProps,\n\t__experimentalUseBorderProps as useBorderProps,\n\t__experimentalGetElementClassName,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButton,\n\tPanelBody,\n\tPlaceholder,\n\tTextControl,\n\tToggleControl,\n\tToolbarDropdownMenu,\n\t__experimentalHasSplitBorders as hasSplitBorders,\n} from '@wordpress/components';\nimport {\n\talignLeft,\n\talignRight,\n\talignCenter,\n\tblockTable as icon,\n\ttableColumnAfter,\n\ttableColumnBefore,\n\ttableColumnDelete,\n\ttableRowAfter,\n\ttableRowBefore,\n\ttableRowDelete,\n\ttable,\n} from '@wordpress/icons';\nimport { createBlock, getDefaultBlockName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\tcreateTable,\n\tupdateSelectedCell,\n\tgetCellAttribute,\n\tinsertRow,\n\tdeleteRow,\n\tinsertColumn,\n\tdeleteColumn,\n\ttoggleSection,\n\tisEmptyTableSection,\n} from './state';\n\nconst ALIGNMENT_CONTROLS = [\n\t{\n\t\ticon: alignLeft,\n\t\ttitle: __( 'Align column left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: alignCenter,\n\t\ttitle: __( 'Align column center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: alignRight,\n\t\ttitle: __( 'Align column right' ),\n\t\talign: 'right',\n\t},\n];\n\nconst cellAriaLabel = {\n\thead: __( 'Header cell text' ),\n\tbody: __( 'Body cell text' ),\n\tfoot: __( 'Footer cell text' ),\n};\n\nconst placeholder = {\n\thead: __( 'Header label' ),\n\tfoot: __( 'Footer label' ),\n};\n\nfunction TSection( { name, ...props } ) {\n\tconst TagName = `t${ name }`;\n\treturn <TagName { ...props } />;\n}\n\nfunction TableEdit( {\n\tattributes,\n\tsetAttributes,\n\tinsertBlocksAfter,\n\tisSelected,\n} ) {\n\tconst { hasFixedLayout, caption, head, foot } = attributes;\n\tconst [ initialRowCount, setInitialRowCount ] = useState( 2 );\n\tconst [ initialColumnCount, setInitialColumnCount ] = useState( 2 );\n\tconst [ selectedCell, setSelectedCell ] = useState();\n\n\tconst colorProps = useColorProps( attributes );\n\tconst borderProps = useBorderProps( attributes );\n\n\tconst tableRef = useRef();\n\tconst [ hasTableCreated, setHasTableCreated ] = useState( false );\n\n\t/**\n\t * Updates the initial column count used for table creation.\n\t *\n\t * @param {number} count New initial column count.\n\t */\n\tfunction onChangeInitialColumnCount( count ) {\n\t\tsetInitialColumnCount( count );\n\t}\n\n\t/**\n\t * Updates the initial row count used for table creation.\n\t *\n\t * @param {number} count New initial row count.\n\t */\n\tfunction onChangeInitialRowCount( count ) {\n\t\tsetInitialRowCount( count );\n\t}\n\n\t/**\n\t * Creates a table based on dimensions in local state.\n\t *\n\t * @param {Object} event Form submit event.\n\t */\n\tfunction onCreateTable( event ) {\n\t\tevent.preventDefault();\n\n\t\tsetAttributes(\n\t\t\tcreateTable( {\n\t\t\t\trowCount: parseInt( initialRowCount, 10 ) || 2,\n\t\t\t\tcolumnCount: parseInt( initialColumnCount, 10 ) || 2,\n\t\t\t} )\n\t\t);\n\t\tsetHasTableCreated( true );\n\t}\n\n\t/**\n\t * Toggles whether the table has a fixed layout or not.\n\t */\n\tfunction onChangeFixedLayout() {\n\t\tsetAttributes( { hasFixedLayout: ! hasFixedLayout } );\n\t}\n\n\t/**\n\t * Changes the content of the currently selected cell.\n\t *\n\t * @param {Array} content A RichText content value.\n\t */\n\tfunction onChange( content ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAttributes(\n\t\t\tupdateSelectedCell(\n\t\t\t\tattributes,\n\t\t\t\tselectedCell,\n\t\t\t\t( cellAttributes ) => ( {\n\t\t\t\t\t...cellAttributes,\n\t\t\t\t\tcontent,\n\t\t\t\t} )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Align text within the a column.\n\t *\n\t * @param {string} align The new alignment to apply to the column.\n\t */\n\tfunction onChangeColumnAlignment( align ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert the cell selection to a column selection so that alignment\n\t\t// is applied to the entire column.\n\t\tconst columnSelection = {\n\t\t\ttype: 'column',\n\t\t\tcolumnIndex: selectedCell.columnIndex,\n\t\t};\n\n\t\tconst newAttributes = updateSelectedCell(\n\t\t\tattributes,\n\t\t\tcolumnSelection,\n\t\t\t( cellAttributes ) => ( {\n\t\t\t\t...cellAttributes,\n\t\t\t\talign,\n\t\t\t} )\n\t\t);\n\t\tsetAttributes( newAttributes );\n\t}\n\n\t/**\n\t * Get the alignment of the currently selected cell.\n\t *\n\t * @return {string | undefined} The new alignment to apply to the column.\n\t */\n\tfunction getCellAlignment() {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn getCellAttribute( attributes, selectedCell, 'align' );\n\t}\n\n\t/**\n\t * Add or remove a `head` table section.\n\t */\n\tfunction onToggleHeaderSection() {\n\t\tsetAttributes( toggleSection( attributes, 'head' ) );\n\t}\n\n\t/**\n\t * Add or remove a `foot` table section.\n\t */\n\tfunction onToggleFooterSection() {\n\t\tsetAttributes( toggleSection( attributes, 'foot' ) );\n\t}\n\n\t/**\n\t * Inserts a row at the currently selected row index, plus `delta`.\n\t *\n\t * @param {number} delta Offset for selected row index at which to insert.\n\t */\n\tfunction onInsertRow( delta ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { sectionName, rowIndex } = selectedCell;\n\t\tconst newRowIndex = rowIndex + delta;\n\n\t\tsetAttributes(\n\t\t\tinsertRow( attributes, {\n\t\t\t\tsectionName,\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t} )\n\t\t);\n\t\t// Select the first cell of the new row.\n\t\tsetSelectedCell( {\n\t\t\tsectionName,\n\t\t\trowIndex: newRowIndex,\n\t\t\tcolumnIndex: 0,\n\t\t\ttype: 'cell',\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts a row before the currently selected row.\n\t */\n\tfunction onInsertRowBefore() {\n\t\tonInsertRow( 0 );\n\t}\n\n\t/**\n\t * Inserts a row after the currently selected row.\n\t */\n\tfunction onInsertRowAfter() {\n\t\tonInsertRow( 1 );\n\t}\n\n\t/**\n\t * Deletes the currently selected row.\n\t */\n\tfunction onDeleteRow() {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { sectionName, rowIndex } = selectedCell;\n\n\t\tsetSelectedCell();\n\t\tsetAttributes( deleteRow( attributes, { sectionName, rowIndex } ) );\n\t}\n\n\t/**\n\t * Inserts a column at the currently selected column index, plus `delta`.\n\t *\n\t * @param {number} delta Offset for selected column index at which to insert.\n\t */\n\tfunction onInsertColumn( delta = 0 ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { columnIndex } = selectedCell;\n\t\tconst newColumnIndex = columnIndex + delta;\n\n\t\tsetAttributes(\n\t\t\tinsertColumn( attributes, {\n\t\t\t\tcolumnIndex: newColumnIndex,\n\t\t\t} )\n\t\t);\n\t\t// Select the first cell of the new column.\n\t\tsetSelectedCell( {\n\t\t\trowIndex: 0,\n\t\t\tcolumnIndex: newColumnIndex,\n\t\t\ttype: 'cell',\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts a column before the currently selected column.\n\t */\n\tfunction onInsertColumnBefore() {\n\t\tonInsertColumn( 0 );\n\t}\n\n\t/**\n\t * Inserts a column after the currently selected column.\n\t */\n\tfunction onInsertColumnAfter() {\n\t\tonInsertColumn( 1 );\n\t}\n\n\t/**\n\t * Deletes the currently selected column.\n\t */\n\tfunction onDeleteColumn() {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { sectionName, columnIndex } = selectedCell;\n\n\t\tsetSelectedCell();\n\t\tsetAttributes(\n\t\t\tdeleteColumn( attributes, { sectionName, columnIndex } )\n\t\t);\n\t}\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetSelectedCell();\n\t\t}\n\t}, [ isSelected ] );\n\n\tuseEffect( () => {\n\t\tif ( hasTableCreated ) {\n\t\t\ttableRef?.current\n\t\t\t\t?.querySelector( 'td div[contentEditable=\"true\"]' )\n\t\t\t\t?.focus();\n\t\t\tsetHasTableCreated( false );\n\t\t}\n\t}, [ hasTableCreated ] );\n\n\tconst sections = [ 'head', 'body', 'foot' ].filter(\n\t\t( name ) => ! isEmptyTableSection( attributes[ name ] )\n\t);\n\n\tconst tableControls = [\n\t\t{\n\t\t\ticon: tableRowBefore,\n\t\t\ttitle: __( 'Insert row before' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertRowBefore,\n\t\t},\n\t\t{\n\t\t\ticon: tableRowAfter,\n\t\t\ttitle: __( 'Insert row after' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertRowAfter,\n\t\t},\n\t\t{\n\t\t\ticon: tableRowDelete,\n\t\t\ttitle: __( 'Delete row' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onDeleteRow,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnBefore,\n\t\t\ttitle: __( 'Insert column before' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertColumnBefore,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnAfter,\n\t\t\ttitle: __( 'Insert column after' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertColumnAfter,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnDelete,\n\t\t\ttitle: __( 'Delete column' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onDeleteColumn,\n\t\t},\n\t];\n\n\tconst renderedSections = sections.map( ( name ) => (\n\t\t<TSection name={ name } key={ name }>\n\t\t\t{ attributes[ name ].map( ( { cells }, rowIndex ) => (\n\t\t\t\t<tr key={ rowIndex }>\n\t\t\t\t\t{ cells.map(\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\ttag: CellTag,\n\t\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\t\talign,\n\t\t\t\t\t\t\t\tcolspan,\n\t\t\t\t\t\t\t\trowspan,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcolumnIndex\n\t\t\t\t\t\t) => (\n\t\t\t\t\t\t\t<CellTag\n\t\t\t\t\t\t\t\tkey={ columnIndex }\n\t\t\t\t\t\t\t\tscope={ CellTag === 'th' ? scope : undefined }\n\t\t\t\t\t\t\t\tcolSpan={ colspan }\n\t\t\t\t\t\t\t\trowSpan={ rowspan }\n\t\t\t\t\t\t\t\tclassName={ clsx(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t'wp-block-table__cell-content'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\tvalue={ content }\n\t\t\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\t\t\tonFocus={ () => {\n\t\t\t\t\t\t\t\t\t\tsetSelectedCell( {\n\t\t\t\t\t\t\t\t\t\t\tsectionName: name,\n\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\t\ttype: 'cell',\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\taria-label={ cellAriaLabel[ name ] }\n\t\t\t\t\t\t\t\t\tplaceholder={ placeholder[ name ] }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CellTag>\n\t\t\t\t\t\t)\n\t\t\t\t\t) }\n\t\t\t\t</tr>\n\t\t\t) ) }\n\t\t</TSection>\n\t) );\n\n\tconst isEmpty = ! sections.length;\n\n\treturn (\n\t\t<figure { ...useBlockProps( { ref: tableRef } ) }>\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<>\n\t\t\t\t\t<BlockControls group=\"block\">\n\t\t\t\t\t\t<AlignmentControl\n\t\t\t\t\t\t\tlabel={ __( 'Change column alignment' ) }\n\t\t\t\t\t\t\talignmentControls={ ALIGNMENT_CONTROLS }\n\t\t\t\t\t\t\tvalue={ getCellAlignment() }\n\t\t\t\t\t\t\tonChange={ ( nextAlign ) =>\n\t\t\t\t\t\t\t\tonChangeColumnAlignment( nextAlign )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t\t<BlockControls group=\"other\">\n\t\t\t\t\t\t<ToolbarDropdownMenu\n\t\t\t\t\t\t\thasArrowIndicator\n\t\t\t\t\t\t\ticon={ table }\n\t\t\t\t\t\t\tlabel={ __( 'Edit table' ) }\n\t\t\t\t\t\t\tcontrols={ tableControls }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={ __( 'Settings' ) }\n\t\t\t\t\tclassName=\"blocks-table-settings\"\n\t\t\t\t>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Fixed width table cells' ) }\n\t\t\t\t\t\tchecked={ !! hasFixedLayout }\n\t\t\t\t\t\tonChange={ onChangeFixedLayout }\n\t\t\t\t\t/>\n\t\t\t\t\t{ ! isEmpty && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ __( 'Header section' ) }\n\t\t\t\t\t\t\t\tchecked={ !! ( head && head.length ) }\n\t\t\t\t\t\t\t\tonChange={ onToggleHeaderSection }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ __( 'Footer section' ) }\n\t\t\t\t\t\t\t\tchecked={ !! ( foot && foot.length ) }\n\t\t\t\t\t\t\t\tonChange={ onToggleFooterSection }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<table\n\t\t\t\t\tclassName={ clsx(\n\t\t\t\t\t\tcolorProps.className,\n\t\t\t\t\t\tborderProps.className,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'has-fixed-layout': hasFixedLayout,\n\t\t\t\t\t\t\t// This is required in the editor only to overcome\n\t\t\t\t\t\t\t// the fact the editor rewrites individual border\n\t\t\t\t\t\t\t// widths into a shorthand format.\n\t\t\t\t\t\t\t'has-individual-borders': hasSplitBorders(\n\t\t\t\t\t\t\t\tattributes?.style?.border\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}\n\t\t\t\t\t) }\n\t\t\t\t\tstyle={ { ...colorProps.style, ...borderProps.style } }\n\t\t\t\t>\n\t\t\t\t\t{ renderedSections }\n\t\t\t\t</table>\n\t\t\t) }\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<RichText\n\t\t\t\t\tidentifier=\"caption\"\n\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\tclassName={ __experimentalGetElementClassName( 'caption' ) }\n\t\t\t\t\taria-label={ __( 'Table caption text' ) }\n\t\t\t\t\tplaceholder={ __( 'Add caption' ) }\n\t\t\t\t\tvalue={ caption }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t}\n\t\t\t\t\t// Deselect the selected table cell when the caption is focused.\n\t\t\t\t\tonFocus={ () => setSelectedCell() }\n\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\tinsertBlocksAfter(\n\t\t\t\t\t\t\tcreateBlock( getDefaultBlockName() )\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ isEmpty && (\n\t\t\t\t<Placeholder\n\t\t\t\t\tlabel={ __( 'Table' ) }\n\t\t\t\t\ticon={ <BlockIcon icon={ icon } showColors /> }\n\t\t\t\t\tinstructions={ __( 'Insert a table for sharing data.' ) }\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"blocks-table__placeholder-form\"\n\t\t\t\t\t\tonSubmit={ onCreateTable }\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Column count' ) }\n\t\t\t\t\t\t\tvalue={ initialColumnCount }\n\t\t\t\t\t\t\tonChange={ onChangeInitialColumnCount }\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Row count' ) }\n\t\t\t\t\t\t\tvalue={ initialRowCount }\n\t\t\t\t\t\t\tonChange={ onChangeInitialRowCount }\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create Table' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</Placeholder>\n\t\t\t) }\n\t\t</figure>\n\t);\n}\n\nexport default TableEdit;\n"],"mappings":"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","ignoreList":[]}