{"version":3,"names":["_i18n","require","_blockEditor","_components","OrderedListSettings","setAttributes","reversed","start","type","_react","createElement","InspectorControls","PanelBody","title","__","TextControl","__nextHasNoMarginBottom","label","onChange","value","int","parseInt","isNaN","undefined","Number","isInteger","toString","step","SelectControl","options","newValue","ToggleControl","checked","_default","exports","default"],"sources":["@wordpress/block-library/src/list/ordered-list-settings.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n\tTextControl,\n\tPanelBody,\n\tToggleControl,\n\tSelectControl,\n} from '@wordpress/components';\n\nconst OrderedListSettings = ( { setAttributes, reversed, start, type } ) => (\n\t<InspectorControls>\n\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t<TextControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Start value' ) }\n\t\t\t\ttype=\"number\"\n\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\tconst int = parseInt( value, 10 );\n\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t// It should be possible to unset the value,\n\t\t\t\t\t\t// e.g. with an empty string.\n\t\t\t\t\t\tstart: isNaN( int ) ? undefined : int,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tvalue={ Number.isInteger( start ) ? start.toString( 10 ) : '' }\n\t\t\t\tstep=\"1\"\n\t\t\t/>\n\t\t\t<SelectControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Numbering style' ) }\n\t\t\t\toptions={ [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Numbers' ),\n\t\t\t\t\t\tvalue: 'decimal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Uppercase letters' ),\n\t\t\t\t\t\tvalue: 'upper-alpha',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Lowercase letters' ),\n\t\t\t\t\t\tvalue: 'lower-alpha',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Uppercase Roman numerals' ),\n\t\t\t\t\t\tvalue: 'upper-roman',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Lowercase Roman numerals' ),\n\t\t\t\t\t\tvalue: 'lower-roman',\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t\tvalue={ type }\n\t\t\t\tonChange={ ( newValue ) => setAttributes( { type: newValue } ) }\n\t\t\t/>\n\t\t\t<ToggleControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Reverse list numbering' ) }\n\t\t\t\tchecked={ reversed || false }\n\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t// Unset the attribute if not reversed.\n\t\t\t\t\t\treversed: value || undefined,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t/>\n\t\t</PanelBody>\n\t</InspectorControls>\n);\n\nexport default OrderedListSettings;\n"],"mappings":";;;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AALA;AACA;AACA;;AAUA,MAAMG,mBAAmB,GAAGA,CAAE;EAAEC,aAAa;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAK,CAAC,KACrE,IAAAC,MAAA,CAAAC,aAAA,EAACR,YAAA,CAAAS,iBAAiB,QACjB,IAAAF,MAAA,CAAAC,aAAA,EAACP,WAAA,CAAAS,SAAS;EAACC,KAAK,EAAG,IAAAC,QAAE,EAAE,UAAW;AAAG,GACpC,IAAAL,MAAA,CAAAC,aAAA,EAACP,WAAA,CAAAY,WAAW;EACXC,uBAAuB;EACvBC,KAAK,EAAG,IAAAH,QAAE,EAAE,aAAc,CAAG;EAC7BN,IAAI,EAAC,QAAQ;EACbU,QAAQ,EAAKC,KAAK,IAAM;IACvB,MAAMC,GAAG,GAAGC,QAAQ,CAAEF,KAAK,EAAE,EAAG,CAAC;IAEjCd,aAAa,CAAE;MACd;MACA;MACAE,KAAK,EAAEe,KAAK,CAAEF,GAAI,CAAC,GAAGG,SAAS,GAAGH;IACnC,CAAE,CAAC;EACJ,CAAG;EACHD,KAAK,EAAGK,MAAM,CAACC,SAAS,CAAElB,KAAM,CAAC,GAAGA,KAAK,CAACmB,QAAQ,CAAE,EAAG,CAAC,GAAG,EAAI;EAC/DC,IAAI,EAAC;AAAG,CACR,CAAC,EACF,IAAAlB,MAAA,CAAAC,aAAA,EAACP,WAAA,CAAAyB,aAAa;EACbZ,uBAAuB;EACvBC,KAAK,EAAG,IAAAH,QAAE,EAAE,iBAAkB,CAAG;EACjCe,OAAO,EAAG,CACT;IACCZ,KAAK,EAAE,IAAAH,QAAE,EAAE,SAAU,CAAC;IACtBK,KAAK,EAAE;EACR,CAAC,EACD;IACCF,KAAK,EAAE,IAAAH,QAAE,EAAE,mBAAoB,CAAC;IAChCK,KAAK,EAAE;EACR,CAAC,EACD;IACCF,KAAK,EAAE,IAAAH,QAAE,EAAE,mBAAoB,CAAC;IAChCK,KAAK,EAAE;EACR,CAAC,EACD;IACCF,KAAK,EAAE,IAAAH,QAAE,EAAE,0BAA2B,CAAC;IACvCK,KAAK,EAAE;EACR,CAAC,EACD;IACCF,KAAK,EAAE,IAAAH,QAAE,EAAE,0BAA2B,CAAC;IACvCK,KAAK,EAAE;EACR,CAAC,CACC;EACHA,KAAK,EAAGX,IAAM;EACdU,QAAQ,EAAKY,QAAQ,IAAMzB,aAAa,CAAE;IAAEG,IAAI,EAAEsB;EAAS,CAAE;AAAG,CAChE,CAAC,EACF,IAAArB,MAAA,CAAAC,aAAA,EAACP,WAAA,CAAA4B,aAAa;EACbf,uBAAuB;EACvBC,KAAK,EAAG,IAAAH,QAAE,EAAE,wBAAyB,CAAG;EACxCkB,OAAO,EAAG1B,QAAQ,IAAI,KAAO;EAC7BY,QAAQ,EAAKC,KAAK,IAAM;IACvBd,aAAa,CAAE;MACd;MACAC,QAAQ,EAAEa,KAAK,IAAII;IACpB,CAAE,CAAC;EACJ;AAAG,CACH,CACS,CACO,CACnB;AAAC,IAAAU,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEa/B,mBAAmB","ignoreList":[]}