import { createElement } from "react";
/**
 * External dependencies
 */
import { Text, Image, View } from 'react-native';

/**
 * WordPress dependencies
 */
import { usePreferredColorScheme, usePreferredColorSchemeStyle } from '@wordpress/compose';

/**
 * Internal dependencies
 */
import styles from './style.scss';
export const HelpDetailBodyText = ({
  text
}) => {
  const bodyStyle = usePreferredColorSchemeStyle(styles.helpDetailBody, styles.helpDetailBodyDark);
  return createElement(Text, {
    selectable: true,
    style: bodyStyle
  }, text);
};
export const HelpDetailSectionHeadingText = ({
  text,
  badge
}) => {
  const headingTextStyle = usePreferredColorSchemeStyle(styles.helpDetailSectionHeadingText, styles.helpDetailSectionHeadingTextDark);
  return createElement(View, {
    style: styles.helpDetailSectionHeading
  }, badge && createElement(HelpDetailBadge, {
    text: badge
  }), createElement(Text, {
    accessibilityRole: "header",
    selectable: true,
    style: headingTextStyle
  }, text));
};
export const HelpDetailImage = ({
  accessible,
  accessibilityLabel,
  source,
  sourceDarkMode
}) => {
  const imageStyle = usePreferredColorSchemeStyle(styles.helpDetailImage, styles.helpDetailImageDark);
  const darkModeEnabled = usePreferredColorScheme() === 'dark';
  return createElement(Image, {
    accessible: accessible,
    accessibilityLabel: accessibilityLabel,
    source: darkModeEnabled && sourceDarkMode ? sourceDarkMode : source,
    style: imageStyle
  });
};
const HelpDetailBadge = ({
  text
}) => {
  return createElement(View, {
    style: styles.helpDetailBadgeContainer
  }, createElement(Text, {
    style: styles.helpDetailBadgeText
  }, text));
};
//# sourceMappingURL=view-sections.native.js.map