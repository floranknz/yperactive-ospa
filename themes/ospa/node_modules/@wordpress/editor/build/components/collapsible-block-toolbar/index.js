"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _clsx = _interopRequireDefault(require("clsx"));
var _blockEditor = require("@wordpress/block-editor");
var _element = require("@wordpress/element");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _icons = require("@wordpress/icons");
var _data = require("@wordpress/data");
var _lockUnlock = require("../../lock-unlock");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const {
  useHasBlockToolbar
} = (0, _lockUnlock.unlock)(_blockEditor.privateApis);
function CollapsableBlockToolbar({
  isCollapsed,
  onToggle
}) {
  const {
    blockSelectionStart
  } = (0, _data.useSelect)(select => {
    return {
      blockSelectionStart: select(_blockEditor.store).getBlockSelectionStart()
    };
  }, []);
  const hasBlockToolbar = useHasBlockToolbar();
  const hasBlockSelection = !!blockSelectionStart;
  (0, _element.useEffect)(() => {
    // If we have a new block selection, show the block tools
    if (blockSelectionStart) {
      onToggle(false);
    }
  }, [blockSelectionStart, onToggle]);
  if (!hasBlockToolbar) {
    return null;
  }
  return (0, _react.createElement)(_react.Fragment, null, (0, _react.createElement)("div", {
    className: (0, _clsx.default)('editor-collapsible-block-toolbar', {
      'is-collapsed': isCollapsed || !hasBlockSelection
    })
  }, (0, _react.createElement)(_blockEditor.BlockToolbar, {
    hideDragHandle: true
  })), (0, _react.createElement)(_components.Popover.Slot, {
    name: "block-toolbar"
  }), (0, _react.createElement)(_components.Button, {
    className: "editor-collapsible-block-toolbar__toggle",
    icon: isCollapsed ? _icons.next : _icons.previous,
    onClick: () => {
      onToggle(!isCollapsed);
    },
    label: isCollapsed ? (0, _i18n.__)('Show block tools') : (0, _i18n.__)('Hide block tools'),
    size: "compact"
  }));
}
var _default = exports.default = CollapsableBlockToolbar;
//# sourceMappingURL=index.js.map