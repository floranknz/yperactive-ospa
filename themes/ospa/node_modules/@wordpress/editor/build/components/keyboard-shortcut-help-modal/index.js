"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _clsx = _interopRequireDefault(require("clsx"));
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _keyboardShortcuts = require("@wordpress/keyboard-shortcuts");
var _data = require("@wordpress/data");
var _interface = require("@wordpress/interface");
var _config = require("./config");
var _shortcut = _interopRequireDefault(require("./shortcut"));
var _dynamicShortcut = _interopRequireDefault(require("./dynamic-shortcut"));
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const KEYBOARD_SHORTCUT_HELP_MODAL_NAME = 'editor/keyboard-shortcut-help';
const ShortcutList = ({
  shortcuts
}) =>
/*
 * Disable reason: The `list` ARIA role is redundant but
 * Safari+VoiceOver won't announce the list otherwise.
 */
/* eslint-disable jsx-a11y/no-redundant-roles */
(0, _react.createElement)("ul", {
  className: "editor-keyboard-shortcut-help-modal__shortcut-list",
  role: "list"
}, shortcuts.map((shortcut, index) => (0, _react.createElement)("li", {
  className: "editor-keyboard-shortcut-help-modal__shortcut",
  key: index
}, typeof shortcut === 'string' ? (0, _react.createElement)(_dynamicShortcut.default, {
  name: shortcut
}) : (0, _react.createElement)(_shortcut.default, {
  ...shortcut
}))))
/* eslint-enable jsx-a11y/no-redundant-roles */;
const ShortcutSection = ({
  title,
  shortcuts,
  className
}) => (0, _react.createElement)("section", {
  className: (0, _clsx.default)('editor-keyboard-shortcut-help-modal__section', className)
}, !!title && (0, _react.createElement)("h2", {
  className: "editor-keyboard-shortcut-help-modal__section-title"
}, title), (0, _react.createElement)(ShortcutList, {
  shortcuts: shortcuts
}));
const ShortcutCategorySection = ({
  title,
  categoryName,
  additionalShortcuts = []
}) => {
  const categoryShortcuts = (0, _data.useSelect)(select => {
    return select(_keyboardShortcuts.store).getCategoryShortcuts(categoryName);
  }, [categoryName]);
  return (0, _react.createElement)(ShortcutSection, {
    title: title,
    shortcuts: categoryShortcuts.concat(additionalShortcuts)
  });
};
function KeyboardShortcutHelpModal() {
  const isModalActive = (0, _data.useSelect)(select => select(_interface.store).isModalActive(KEYBOARD_SHORTCUT_HELP_MODAL_NAME), []);
  const {
    openModal,
    closeModal
  } = (0, _data.useDispatch)(_interface.store);
  const toggleModal = () => {
    if (isModalActive) {
      closeModal();
    } else {
      openModal(KEYBOARD_SHORTCUT_HELP_MODAL_NAME);
    }
  };
  (0, _keyboardShortcuts.useShortcut)('core/editor/keyboard-shortcuts', toggleModal);
  if (!isModalActive) {
    return null;
  }
  return (0, _react.createElement)(_components.Modal, {
    className: "editor-keyboard-shortcut-help-modal",
    title: (0, _i18n.__)('Keyboard shortcuts'),
    closeButtonLabel: (0, _i18n.__)('Close'),
    onRequestClose: toggleModal
  }, (0, _react.createElement)(ShortcutSection, {
    className: "editor-keyboard-shortcut-help-modal__main-shortcuts",
    shortcuts: ['core/editor/keyboard-shortcuts']
  }), (0, _react.createElement)(ShortcutCategorySection, {
    title: (0, _i18n.__)('Global shortcuts'),
    categoryName: "global"
  }), (0, _react.createElement)(ShortcutCategorySection, {
    title: (0, _i18n.__)('Selection shortcuts'),
    categoryName: "selection"
  }), (0, _react.createElement)(ShortcutCategorySection, {
    title: (0, _i18n.__)('Block shortcuts'),
    categoryName: "block",
    additionalShortcuts: [{
      keyCombination: {
        character: '/'
      },
      description: (0, _i18n.__)('Change the block type after adding a new paragraph.'),
      /* translators: The forward-slash character. e.g. '/'. */
      ariaLabel: (0, _i18n.__)('Forward-slash')
    }]
  }), (0, _react.createElement)(ShortcutSection, {
    title: (0, _i18n.__)('Text formatting'),
    shortcuts: _config.textFormattingShortcuts
  }), (0, _react.createElement)(ShortcutCategorySection, {
    title: (0, _i18n.__)('List View shortcuts'),
    categoryName: "list-view"
  }));
}
var _default = exports.default = KeyboardShortcutHelpModal;
//# sourceMappingURL=index.js.map