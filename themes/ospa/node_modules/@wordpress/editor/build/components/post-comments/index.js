"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _i18n = require("@wordpress/i18n");
var _components = require("@wordpress/components");
var _data = require("@wordpress/data");
var _store = require("../../store");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const COMMENT_OPTIONS = [{
  label: (0, _react.createElement)(_react.Fragment, null, (0, _i18n.__)('Open'), (0, _react.createElement)(_components.__experimentalText, {
    variant: "muted",
    size: 12
  }, (0, _i18n.__)('Visitors can add new comments and replies.'))),
  value: 'open'
}, {
  label: (0, _react.createElement)(_react.Fragment, null, (0, _i18n.__)('Closed'), (0, _react.createElement)(_components.__experimentalText, {
    variant: "muted",
    size: 12
  }, (0, _i18n.__)('Visitors cannot add new comments or replies.')), (0, _react.createElement)(_components.__experimentalText, {
    variant: "muted",
    size: 12
  }, (0, _i18n.__)('Existing comments remain visible.'))),
  value: 'closed'
}];
function PostComments() {
  const commentStatus = (0, _data.useSelect)(select => {
    var _select$getEditedPost;
    return (_select$getEditedPost = select(_store.store).getEditedPostAttribute('comment_status')) !== null && _select$getEditedPost !== void 0 ? _select$getEditedPost : 'open';
  }, []);
  const {
    editPost
  } = (0, _data.useDispatch)(_store.store);
  const handleStatus = newCommentStatus => editPost({
    comment_status: newCommentStatus
  });
  return (0, _react.createElement)("form", null, (0, _react.createElement)(_components.__experimentalVStack, {
    spacing: 4
  }, (0, _react.createElement)(_components.RadioControl, {
    className: "editor-change-status__options",
    hideLabelFromVision: true,
    label: (0, _i18n.__)('Comment status'),
    options: COMMENT_OPTIONS,
    onChange: handleStatus,
    selected: commentStatus
  })));
}
var _default = exports.default = PostComments;
//# sourceMappingURL=index.js.map