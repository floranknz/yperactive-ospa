"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _element = require("@wordpress/element");
var _i18n = require("@wordpress/i18n");
var _components = require("@wordpress/components");
var _data = require("@wordpress/data");
var _blockEditor = require("@wordpress/block-editor");
var _compose = require("@wordpress/compose");
var _hooks = require("@wordpress/hooks");
var _store = require("../../store");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function getContent() {
  try {
    // While `select` in a component is generally discouraged, it is
    // used here because it (a) reduces the chance of data loss in the
    // case of additional errors by performing a direct retrieval and
    // (b) avoids the performance cost associated with unnecessary
    // content serialization throughout the lifetime of a non-erroring
    // application.
    return (0, _data.select)(_store.store).getEditedPostContent();
  } catch (error) {}
}
function CopyButton({
  text,
  children
}) {
  const ref = (0, _compose.useCopyToClipboard)(text);
  return (0, _react.createElement)(_components.Button, {
    variant: "secondary",
    ref: ref
  }, children);
}
class ErrorBoundary extends _element.Component {
  constructor() {
    super(...arguments);
    this.state = {
      error: null
    };
  }
  componentDidCatch(error) {
    (0, _hooks.doAction)('editor.ErrorBoundary.errorLogged', error);
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  render() {
    const {
      error
    } = this.state;
    if (!error) {
      return this.props.children;
    }
    const actions = [(0, _react.createElement)(CopyButton, {
      key: "copy-post",
      text: getContent
    }, (0, _i18n.__)('Copy Post Text')), (0, _react.createElement)(CopyButton, {
      key: "copy-error",
      text: error.stack
    }, (0, _i18n.__)('Copy Error'))];
    return (0, _react.createElement)(_blockEditor.Warning, {
      className: "editor-error-boundary",
      actions: actions
    }, (0, _i18n.__)('The editor has encountered an unexpected error.'));
  }
}
var _default = exports.default = ErrorBoundary;
//# sourceMappingURL=index.js.map