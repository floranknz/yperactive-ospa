{"version":3,"names":["clsx","AlignmentControl","BlockControls","Warning","useBlockProps","useState","useEffect","useSelect","apiFetch","addQueryArgs","__","sprintf","_n","store","coreStore","PostCommentsLinkEdit","context","attributes","setAttributes","textAlign","postType","postId","commentsCount","setCommentsCount","blockProps","className","currentPostId","path","post","parse","then","res","headers","get","select","getEditedEntityRecord","link","commentsText","undefined","commentsNumber","parseInt","toLocaleString","createElement","Fragment","group","value","onChange","nextAlign","href","onClick","event","preventDefault"],"sources":["@wordpress/block-library/src/post-comments-link/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __, sprintf, _n } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\nfunction PostCommentsLinkEdit( { context, attributes, setAttributes } ) {\n\tconst { textAlign } = attributes;\n\tconst { postType, postId } = context;\n\tconst [ commentsCount, setCommentsCount ] = useState();\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: clsx( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( ! postId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentPostId = postId;\n\t\tapiFetch( {\n\t\t\tpath: addQueryArgs( '/wp/v2/comments', {\n\t\t\t\tpost: postId,\n\t\t\t} ),\n\t\t\tparse: false,\n\t\t} ).then( ( res ) => {\n\t\t\t// Stale requests will have the `currentPostId` of an older closure.\n\t\t\tif ( currentPostId === postId ) {\n\t\t\t\tsetCommentsCount( res.headers.get( 'X-WP-Total' ) );\n\t\t\t}\n\t\t} );\n\t}, [ postId ] );\n\n\tconst post = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t),\n\t\t[ postType, postId ]\n\t);\n\n\tif ( ! post ) {\n\t\treturn null;\n\t}\n\n\tconst { link } = post;\n\n\tlet commentsText;\n\tif ( commentsCount !== undefined ) {\n\t\tconst commentsNumber = parseInt( commentsCount );\n\n\t\tif ( commentsNumber === 0 ) {\n\t\t\tcommentsText = __( 'No comments' );\n\t\t} else {\n\t\t\tcommentsText = sprintf(\n\t\t\t\t/* translators: %s: Number of comments */\n\t\t\t\t_n( '%s comment', '%s comments', commentsNumber ),\n\t\t\t\tcommentsNumber.toLocaleString()\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ link && commentsText !== undefined ? (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ link + '#comments' }\n\t\t\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ commentsText }\n\t\t\t\t\t</a>\n\t\t\t\t) : (\n\t\t\t\t\t<Warning>\n\t\t\t\t\t\t{ __( 'Post Comments Link block: post not found.' ) }\n\t\t\t\t\t</Warning>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default PostCommentsLinkEdit;\n"],"mappings":"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","ignoreList":[]}