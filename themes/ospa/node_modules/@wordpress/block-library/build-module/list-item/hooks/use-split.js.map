{"version":3,"names":["useCallback","useRef","useSelect","store","blockEditorStore","cloneBlock","createBlock","useSplit","clientId","isAfter","getBlock","value","block","current","content","name","attributes"],"sources":["@wordpress/block-library/src/list-item/hooks/use-split.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useCallback, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { cloneBlock, createBlock } from '@wordpress/blocks';\n\nexport default function useSplit( clientId ) {\n\t// We can not rely on the isAfterOriginal parameter of the callback,\n\t// because if the value after the split is empty isAfterOriginal is false\n\t// while the value is in fact after the original. So to avoid that issue we use\n\t// a flag where the first execution of the callback is false (it is the before value)\n\t// and the second execution is true, it is the after value.\n\tconst isAfter = useRef( false );\n\tconst { getBlock } = useSelect( blockEditorStore );\n\treturn useCallback(\n\t\t( value ) => {\n\t\t\tconst block = getBlock( clientId );\n\t\t\tif ( isAfter.current ) {\n\t\t\t\treturn cloneBlock( block, {\n\t\t\t\t\tcontent: value,\n\t\t\t\t} );\n\t\t\t}\n\t\t\tisAfter.current = true;\n\t\t\treturn createBlock( block.name, {\n\t\t\t\t...block.attributes,\n\t\t\t\tcontent: value,\n\t\t\t} );\n\t\t},\n\t\t[ clientId, getBlock ]\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,MAAM,QAAQ,oBAAoB;AACxD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,yBAAyB;AACnE,SAASC,UAAU,EAAEC,WAAW,QAAQ,mBAAmB;AAE3D,eAAe,SAASC,QAAQA,CAAEC,QAAQ,EAAG;EAC5C;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAGR,MAAM,CAAE,KAAM,CAAC;EAC/B,MAAM;IAAES;EAAS,CAAC,GAAGR,SAAS,CAAEE,gBAAiB,CAAC;EAClD,OAAOJ,WAAW,CACfW,KAAK,IAAM;IACZ,MAAMC,KAAK,GAAGF,QAAQ,CAAEF,QAAS,CAAC;IAClC,IAAKC,OAAO,CAACI,OAAO,EAAG;MACtB,OAAOR,UAAU,CAAEO,KAAK,EAAE;QACzBE,OAAO,EAAEH;MACV,CAAE,CAAC;IACJ;IACAF,OAAO,CAACI,OAAO,GAAG,IAAI;IACtB,OAAOP,WAAW,CAAEM,KAAK,CAACG,IAAI,EAAE;MAC/B,GAAGH,KAAK,CAACI,UAAU;MACnBF,OAAO,EAAEH;IACV,CAAE,CAAC;EACJ,CAAC,EACD,CAAEH,QAAQ,EAAEE,QAAQ,CACrB,CAAC;AACF","ignoreList":[]}