{"version":3,"names":["clsx","useEntityProp","store","coreStore","useMemo","useState","dateI18n","getSettings","getDateSettings","AlignmentControl","BlockControls","InspectorControls","useBlockProps","__experimentalDateFormatPicker","DateFormatPicker","__experimentalPublishDateTimePicker","PublishDateTimePicker","Dropdown","ToolbarGroup","ToolbarButton","ToggleControl","PanelBody","__","sprintf","edit","DOWN","useSelect","PostDateEdit","attributes","textAlign","format","isLink","displayType","context","postId","postType","postTypeSlug","queryId","setAttributes","blockProps","className","popoverAnchor","setPopoverAnchor","popoverProps","anchor","isDescendentOfQueryLoop","Number","isFinite","dateSettings","siteFormat","formats","date","siteTimeFormat","time","setDate","select","getPostType","dateLabel","postDate","createElement","dateTime","ref","href","onClick","event","preventDefault","Fragment","group","value","onChange","nextAlign","renderContent","onClose","currentDate","is12Hour","is12HourFormat","renderToggle","isOpen","onToggle","openOnArrowDown","keyCode","icon","title","onKeyDown","defaultFormat","nextFormat","__nextHasNoMarginBottom","label","labels","singular_name","toLowerCase","checked","help","test"],"sources":["@wordpress/block-library/src/post-date/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityProp, store as coreStore } from '@wordpress/core-data';\nimport { useMemo, useState } from '@wordpress/element';\nimport { dateI18n, getSettings as getDateSettings } from '@wordpress/date';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tInspectorControls,\n\tuseBlockProps,\n\t__experimentalDateFormatPicker as DateFormatPicker,\n\t__experimentalPublishDateTimePicker as PublishDateTimePicker,\n} from '@wordpress/block-editor';\nimport {\n\tDropdown,\n\tToolbarGroup,\n\tToolbarButton,\n\tToggleControl,\n\tPanelBody,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { edit } from '@wordpress/icons';\nimport { DOWN } from '@wordpress/keycodes';\nimport { useSelect } from '@wordpress/data';\n\nexport default function PostDateEdit( {\n\tattributes: { textAlign, format, isLink, displayType },\n\tcontext: { postId, postType: postTypeSlug, queryId },\n\tsetAttributes,\n} ) {\n\tconst blockProps = useBlockProps( {\n\t\tclassName: clsx( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t[ `wp-block-post-date__modified-date` ]: displayType === 'modified',\n\t\t} ),\n\t} );\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( { anchor: popoverAnchor } ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tconst isDescendentOfQueryLoop = Number.isFinite( queryId );\n\tconst dateSettings = getDateSettings();\n\tconst [ siteFormat = dateSettings.formats.date ] = useEntityProp(\n\t\t'root',\n\t\t'site',\n\t\t'date_format'\n\t);\n\tconst [ siteTimeFormat = dateSettings.formats.time ] = useEntityProp(\n\t\t'root',\n\t\t'site',\n\t\t'time_format'\n\t);\n\tconst [ date, setDate ] = useEntityProp(\n\t\t'postType',\n\t\tpostTypeSlug,\n\t\tdisplayType,\n\t\tpostId\n\t);\n\n\tconst postType = useSelect(\n\t\t( select ) =>\n\t\t\tpostTypeSlug\n\t\t\t\t? select( coreStore ).getPostType( postTypeSlug )\n\t\t\t\t: null,\n\t\t[ postTypeSlug ]\n\t);\n\n\tconst dateLabel =\n\t\tdisplayType === 'date' ? __( 'Post Date' ) : __( 'Post Modified Date' );\n\n\tlet postDate = date ? (\n\t\t<time dateTime={ dateI18n( 'c', date ) } ref={ setPopoverAnchor }>\n\t\t\t{ dateI18n( format || siteFormat, date ) }\n\t\t</time>\n\t) : (\n\t\tdateLabel\n\t);\n\n\tif ( isLink && date ) {\n\t\tpostDate = (\n\t\t\t<a\n\t\t\t\thref=\"#post-date-pseudo-link\"\n\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t>\n\t\t\t\t{ postDate }\n\t\t\t</a>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t{ date &&\n\t\t\t\t\tdisplayType === 'date' &&\n\t\t\t\t\t! isDescendentOfQueryLoop && (\n\t\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t\t\t\t<PublishDateTimePicker\n\t\t\t\t\t\t\t\t\t\tcurrentDate={ date }\n\t\t\t\t\t\t\t\t\t\tonChange={ setDate }\n\t\t\t\t\t\t\t\t\t\tis12Hour={ is12HourFormat(\n\t\t\t\t\t\t\t\t\t\t\tsiteTimeFormat\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => {\n\t\t\t\t\t\t\t\t\tconst openOnArrowDown = ( event ) => {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t! isOpen &&\n\t\t\t\t\t\t\t\t\t\t\tevent.keyCode === DOWN\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\tonToggle();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t\t\t\t\t\ticon={ edit }\n\t\t\t\t\t\t\t\t\t\t\ttitle={ __( 'Change Date' ) }\n\t\t\t\t\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={ openOnArrowDown }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t) }\n\t\t\t</BlockControls>\n\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t\t<DateFormatPicker\n\t\t\t\t\t\tformat={ format }\n\t\t\t\t\t\tdefaultFormat={ siteFormat }\n\t\t\t\t\t\tonChange={ ( nextFormat ) =>\n\t\t\t\t\t\t\tsetAttributes( { format: nextFormat } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\tpostType?.labels.singular_name\n\t\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t\t// translators: %s: Name of the post type e.g: \"post\".\n\t\t\t\t\t\t\t\t\t\t__( 'Link to %s' ),\n\t\t\t\t\t\t\t\t\t\tpostType.labels.singular_name.toLowerCase()\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: __( 'Link to post' )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonChange={ () => setAttributes( { isLink: ! isLink } ) }\n\t\t\t\t\t\tchecked={ isLink }\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Display last modified date' ) }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tdisplayType: value ? 'modified' : 'date',\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchecked={ displayType === 'modified' }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'Only shows if the post has been modified'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<div { ...blockProps }>{ postDate }</div>\n\t\t</>\n\t);\n}\n\nexport function is12HourFormat( format ) {\n\t// To know if the time format is a 12 hour time, look for any of the 12 hour\n\t// format characters: 'a', 'A', 'g', and 'h'. The character must be\n\t// unescaped, i.e. not preceded by a '\\'. Coincidentally, 'aAgh' is how I\n\t// feel when working with regular expressions.\n\t// https://www.php.net/manual/en/datetime.format.php\n\treturn /(?:^|[^\\\\])[aAgh]/.test( format );\n}\n"],"mappings":"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","ignoreList":[]}