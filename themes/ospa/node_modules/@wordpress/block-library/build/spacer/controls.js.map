{"version":3,"names":["_i18n","require","_blockEditor","_components","_compose","_primitives","_constants","DimensionInput","label","onChange","isResizing","value","inputId","useInstanceId","UnitControl","spacingSizes","spacingUnits","useSettings","availableUnits","filter","unit","units","useCustomUnits","defaultValues","px","em","rem","vw","vh","handleOnChange","unprocessedValue","all","parsedQuantity","parsedUnit","parseQuantityAndUnitFromRawValue","computedValue","isValueSpacingPreset","join","_react","createElement","Fragment","length","BaseControl","id","__experimentalUnitControl","isResetValueOnUnitChange","min","MIN_SPACER_SIZE","style","maxWidth","View","className","__experimentalSpacingSizesControl","values","sides","allowReset","splitOnAxis","showSideInLabel","SpacerControls","setAttributes","orientation","height","width","InspectorControls","PanelBody","title","__","nextWidth","nextHeight"],"sources":["@wordpress/block-library/src/spacer/controls.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tInspectorControls,\n\tuseSettings,\n\t__experimentalSpacingSizesControl as SpacingSizesControl,\n\tisValueSpacingPreset,\n} from '@wordpress/block-editor';\nimport {\n\tBaseControl,\n\tPanelBody,\n\t__experimentalUseCustomUnits as useCustomUnits,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { View } from '@wordpress/primitives';\n\n/**\n * Internal dependencies\n */\nimport { MIN_SPACER_SIZE } from './constants';\n\nfunction DimensionInput( { label, onChange, isResizing, value = '' } ) {\n\tconst inputId = useInstanceId( UnitControl, 'block-spacer-height-input' );\n\tconst [ spacingSizes, spacingUnits ] = useSettings(\n\t\t'spacing.spacingSizes',\n\t\t'spacing.units'\n\t);\n\t// In most contexts the spacer size cannot meaningfully be set to a\n\t// percentage, since this is relative to the parent container. This\n\t// unit is disabled from the UI.\n\tconst availableUnits = spacingUnits\n\t\t? spacingUnits.filter( ( unit ) => unit !== '%' )\n\t\t: [ 'px', 'em', 'rem', 'vw', 'vh' ];\n\n\tconst units = useCustomUnits( {\n\t\tavailableUnits,\n\t\tdefaultValues: { px: 100, em: 10, rem: 10, vw: 10, vh: 25 },\n\t} );\n\n\tconst handleOnChange = ( unprocessedValue ) => {\n\t\tonChange( unprocessedValue.all );\n\t};\n\n\t// Force the unit to update to `px` when the Spacer is being resized.\n\tconst [ parsedQuantity, parsedUnit ] =\n\t\tparseQuantityAndUnitFromRawValue( value );\n\tconst computedValue = isValueSpacingPreset( value )\n\t\t? value\n\t\t: [ parsedQuantity, isResizing ? 'px' : parsedUnit ].join( '' );\n\n\treturn (\n\t\t<>\n\t\t\t{ ( ! spacingSizes || spacingSizes?.length === 0 ) && (\n\t\t\t\t<BaseControl label={ label } id={ inputId }>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tid={ inputId }\n\t\t\t\t\t\tisResetValueOnUnitChange\n\t\t\t\t\t\tmin={ MIN_SPACER_SIZE }\n\t\t\t\t\t\tonChange={ handleOnChange }\n\t\t\t\t\t\tstyle={ { maxWidth: 80 } }\n\t\t\t\t\t\tvalue={ computedValue }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t/>\n\t\t\t\t</BaseControl>\n\t\t\t) }\n\n\t\t\t{ spacingSizes?.length > 0 && (\n\t\t\t\t<View className=\"tools-panel-item-spacing\">\n\t\t\t\t\t<SpacingSizesControl\n\t\t\t\t\t\tvalues={ { all: computedValue } }\n\t\t\t\t\t\tonChange={ handleOnChange }\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t\tsides={ [ 'all' ] }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\tallowReset={ false }\n\t\t\t\t\t\tsplitOnAxis={ false }\n\t\t\t\t\t\tshowSideInLabel={ false }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default function SpacerControls( {\n\tsetAttributes,\n\torientation,\n\theight,\n\twidth,\n\tisResizing,\n} ) {\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t{ orientation === 'horizontal' && (\n\t\t\t\t\t<DimensionInput\n\t\t\t\t\t\tlabel={ __( 'Width' ) }\n\t\t\t\t\t\tvalue={ width }\n\t\t\t\t\t\tonChange={ ( nextWidth ) =>\n\t\t\t\t\t\t\tsetAttributes( { width: nextWidth } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisResizing={ isResizing }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ orientation !== 'horizontal' && (\n\t\t\t\t\t<DimensionInput\n\t\t\t\t\t\tlabel={ __( 'Height' ) }\n\t\t\t\t\t\tvalue={ height }\n\t\t\t\t\t\tonChange={ ( nextHeight ) =>\n\t\t\t\t\t\t\tsetAttributes( { height: nextHeight } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisResizing={ isResizing }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}