"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CATEGORY_SLUG = void 0;
exports.default = CategorySelector;
var _react = require("react");
var _i18n = require("@wordpress/i18n");
var _element = require("@wordpress/element");
var _components = require("@wordpress/components");
var _compose = require("@wordpress/compose");
var _htmlEntities = require("@wordpress/html-entities");
/**
 * WordPress dependencies
 */

const unescapeString = arg => {
  return (0, _htmlEntities.decodeEntities)(arg);
};
const CATEGORY_SLUG = exports.CATEGORY_SLUG = 'wp_pattern_category';
function CategorySelector({
  categoryTerms,
  onChange,
  categoryMap
}) {
  const [search, setSearch] = (0, _element.useState)('');
  const debouncedSearch = (0, _compose.useDebounce)(setSearch, 500);
  const suggestions = (0, _element.useMemo)(() => {
    return Array.from(categoryMap.values()).map(category => unescapeString(category.label)).filter(category => {
      if (search !== '') {
        return category.toLowerCase().includes(search.toLowerCase());
      }
      return true;
    }).sort((a, b) => a.localeCompare(b));
  }, [search, categoryMap]);
  function handleChange(termNames) {
    const uniqueTerms = termNames.reduce((terms, newTerm) => {
      if (!terms.some(term => term.toLowerCase() === newTerm.toLowerCase())) {
        terms.push(newTerm);
      }
      return terms;
    }, []);
    onChange(uniqueTerms);
  }
  return (0, _react.createElement)(_components.FormTokenField, {
    className: "patterns-menu-items__convert-modal-categories",
    value: categoryTerms,
    suggestions: suggestions,
    onChange: handleChange,
    onInputChange: debouncedSearch,
    label: (0, _i18n.__)('Categories'),
    tokenizeOnBlur: true,
    __experimentalExpandOnFocus: true,
    __next40pxDefaultSize: true,
    __nextHasNoMarginBottom: true
  });
}
//# sourceMappingURL=category-selector.js.map