"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = RenamePatternModal;
var _react = require("react");
var _components = require("@wordpress/components");
var _coreData = require("@wordpress/core-data");
var _data = require("@wordpress/data");
var _element = require("@wordpress/element");
var _htmlEntities = require("@wordpress/html-entities");
var _i18n = require("@wordpress/i18n");
var _notices = require("@wordpress/notices");
/**
 * WordPress dependencies
 */

function RenamePatternModal({
  onClose,
  onError,
  onSuccess,
  pattern,
  ...props
}) {
  const originalName = (0, _htmlEntities.decodeEntities)(pattern.title);
  const [name, setName] = (0, _element.useState)(originalName);
  const [isSaving, setIsSaving] = (0, _element.useState)(false);
  const {
    editEntityRecord,
    __experimentalSaveSpecifiedEntityEdits: saveSpecifiedEntityEdits
  } = (0, _data.useDispatch)(_coreData.store);
  const {
    createSuccessNotice,
    createErrorNotice
  } = (0, _data.useDispatch)(_notices.store);
  const onRename = async event => {
    event.preventDefault();
    if (!name || name === pattern.title || isSaving) {
      return;
    }
    try {
      await editEntityRecord('postType', pattern.type, pattern.id, {
        title: name
      });
      setIsSaving(true);
      setName('');
      onClose?.();
      const savedRecord = await saveSpecifiedEntityEdits('postType', pattern.type, pattern.id, ['title'], {
        throwOnError: true
      });
      onSuccess?.(savedRecord);
      createSuccessNotice((0, _i18n.__)('Pattern renamed'), {
        type: 'snackbar',
        id: 'pattern-update'
      });
    } catch (error) {
      onError?.();
      const errorMessage = error.message && error.code !== 'unknown_error' ? error.message : (0, _i18n.__)('An error occurred while renaming the pattern.');
      createErrorNotice(errorMessage, {
        type: 'snackbar',
        id: 'pattern-update'
      });
    } finally {
      setIsSaving(false);
      setName('');
    }
  };
  const onRequestClose = () => {
    onClose?.();
    setName('');
  };
  return (0, _react.createElement)(_components.Modal, {
    title: (0, _i18n.__)('Rename'),
    ...props,
    onRequestClose: onClose
  }, (0, _react.createElement)("form", {
    onSubmit: onRename
  }, (0, _react.createElement)(_components.__experimentalVStack, {
    spacing: "5"
  }, (0, _react.createElement)(_components.TextControl, {
    __nextHasNoMarginBottom: true,
    __next40pxDefaultSize: true,
    label: (0, _i18n.__)('Name'),
    value: name,
    onChange: setName,
    required: true
  }), (0, _react.createElement)(_components.__experimentalHStack, {
    justify: "right"
  }, (0, _react.createElement)(_components.Button, {
    __next40pxDefaultSize: true,
    variant: "tertiary",
    onClick: onRequestClose
  }, (0, _i18n.__)('Cancel')), (0, _react.createElement)(_components.Button, {
    __next40pxDefaultSize: true,
    variant: "primary",
    type: "submit"
  }, (0, _i18n.__)('Save'))))));
}
//# sourceMappingURL=rename-pattern-modal.js.map