"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomFieldsConfirmation = CustomFieldsConfirmation;
exports.EnableCustomFieldsOption = EnableCustomFieldsOption;
exports.default = void 0;
var _react = require("react");
var _element = require("@wordpress/element");
var _i18n = require("@wordpress/i18n");
var _components = require("@wordpress/components");
var _data = require("@wordpress/data");
var _editor = require("@wordpress/editor");
var _preferences = require("@wordpress/preferences");
var _url = require("@wordpress/url");
var _lockUnlock = require("../../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const {
  PreferenceBaseOption
} = (0, _lockUnlock.unlock)(_preferences.privateApis);
function submitCustomFieldsForm() {
  const customFieldsForm = document.getElementById('toggle-custom-fields-form');

  // Ensure the referrer values is up to update with any
  customFieldsForm.querySelector('[name="_wp_http_referer"]').setAttribute('value', (0, _url.getPathAndQueryString)(window.location.href));
  customFieldsForm.submit();
}
function CustomFieldsConfirmation({
  willEnable
}) {
  const [isReloading, setIsReloading] = (0, _element.useState)(false);
  return (0, _react.createElement)(_react.Fragment, null, (0, _react.createElement)("p", {
    className: "edit-post-preferences-modal__custom-fields-confirmation-message"
  }, (0, _i18n.__)('A page reload is required for this change. Make sure your content is saved before reloading.')), (0, _react.createElement)(_components.Button, {
    className: "edit-post-preferences-modal__custom-fields-confirmation-button",
    variant: "secondary",
    isBusy: isReloading,
    disabled: isReloading,
    onClick: () => {
      setIsReloading(true);
      submitCustomFieldsForm();
    }
  }, willEnable ? (0, _i18n.__)('Show & Reload Page') : (0, _i18n.__)('Hide & Reload Page')));
}
function EnableCustomFieldsOption({
  label,
  areCustomFieldsEnabled
}) {
  const [isChecked, setIsChecked] = (0, _element.useState)(areCustomFieldsEnabled);
  return (0, _react.createElement)(PreferenceBaseOption, {
    label: label,
    isChecked: isChecked,
    onChange: setIsChecked
  }, isChecked !== areCustomFieldsEnabled && (0, _react.createElement)(CustomFieldsConfirmation, {
    willEnable: isChecked
  }));
}
var _default = exports.default = (0, _data.withSelect)(select => ({
  areCustomFieldsEnabled: !!select(_editor.store).getEditorSettings().enableCustomFields
}))(EnableCustomFieldsOption);
//# sourceMappingURL=enable-custom-fields.js.map