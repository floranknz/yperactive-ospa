{"version":3,"names":["Component","withSelect","addQueryArgs","store","editorStore","getPostEditURL","postId","post","action","getPostTrashedURL","postType","trashed","post_type","ids","BrowserURL","constructor","arguments","state","historyId","componentDidUpdate","prevProps","postStatus","isSavingPost","hasHistory","props","setTrashURL","setBrowserURL","window","location","href","history","replaceState","id","setState","render","select","getCurrentPost","status","type","isTemplate","includes","wp_id"],"sources":["@wordpress/edit-post/src/components/browser-url/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Returns the Post's Edit URL.\n *\n * @param {number} postId Post ID.\n *\n * @return {string} Post edit URL.\n */\nexport function getPostEditURL( postId ) {\n\treturn addQueryArgs( 'post.php', { post: postId, action: 'edit' } );\n}\n\n/**\n * Returns the Post's Trashed URL.\n *\n * @param {number} postId   Post ID.\n * @param {string} postType Post Type.\n *\n * @return {string} Post trashed URL.\n */\nexport function getPostTrashedURL( postId, postType ) {\n\treturn addQueryArgs( 'edit.php', {\n\t\ttrashed: 1,\n\t\tpost_type: postType,\n\t\tids: postId,\n\t} );\n}\n\nexport class BrowserURL extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\thistoryId: null,\n\t\t};\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { postId, postStatus, postType, isSavingPost, hasHistory } =\n\t\t\tthis.props;\n\t\tconst { historyId } = this.state;\n\n\t\t// Posts are still dirty while saving so wait for saving to finish\n\t\t// to avoid the unsaved changes warning when trashing posts.\n\t\tif ( postStatus === 'trash' && ! isSavingPost ) {\n\t\t\tthis.setTrashURL( postId, postType );\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t( postId !== prevProps.postId || postId !== historyId ) &&\n\t\t\tpostStatus !== 'auto-draft' &&\n\t\t\tpostId &&\n\t\t\t! hasHistory\n\t\t) {\n\t\t\tthis.setBrowserURL( postId );\n\t\t}\n\t}\n\n\t/**\n\t * Navigates the browser to the post trashed URL to show a notice about the trashed post.\n\t *\n\t * @param {number} postId   Post ID.\n\t * @param {string} postType Post Type.\n\t */\n\tsetTrashURL( postId, postType ) {\n\t\twindow.location.href = getPostTrashedURL( postId, postType );\n\t}\n\n\t/**\n\t * Replaces the browser URL with a post editor link for the given post ID.\n\t *\n\t * Note it is important that, since this function may be called when the\n\t * editor first loads, the result generated `getPostEditURL` matches that\n\t * produced by the server. Otherwise, the URL will change unexpectedly.\n\t *\n\t * @param {number} postId Post ID for which to generate post editor URL.\n\t */\n\tsetBrowserURL( postId ) {\n\t\twindow.history.replaceState(\n\t\t\t{ id: postId },\n\t\t\t'Post ' + postId,\n\t\t\tgetPostEditURL( postId )\n\t\t);\n\n\t\tthis.setState( () => ( {\n\t\t\thistoryId: postId,\n\t\t} ) );\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getCurrentPost, isSavingPost } = select( editorStore );\n\tconst post = getCurrentPost();\n\tlet { id, status, type } = post;\n\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes( type );\n\tif ( isTemplate ) {\n\t\tid = post.wp_id;\n\t}\n\n\treturn {\n\t\tpostId: id,\n\t\tpostStatus: status,\n\t\tpostType: type,\n\t\tisSavingPost: isSavingPost(),\n\t};\n} )( BrowserURL );\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,KAAK,IAAIC,WAAW,QAAQ,mBAAmB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAEC,MAAM,EAAG;EACxC,OAAOJ,YAAY,CAAE,UAAU,EAAE;IAAEK,IAAI,EAAED,MAAM;IAAEE,MAAM,EAAE;EAAO,CAAE,CAAC;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAEH,MAAM,EAAEI,QAAQ,EAAG;EACrD,OAAOR,YAAY,CAAE,UAAU,EAAE;IAChCS,OAAO,EAAE,CAAC;IACVC,SAAS,EAAEF,QAAQ;IACnBG,GAAG,EAAEP;EACN,CAAE,CAAC;AACJ;AAEA,OAAO,MAAMQ,UAAU,SAASd,SAAS,CAAC;EACzCe,WAAWA,CAAA,EAAG;IACb,KAAK,CAAE,GAAGC,SAAU,CAAC;IAErB,IAAI,CAACC,KAAK,GAAG;MACZC,SAAS,EAAE;IACZ,CAAC;EACF;EAEAC,kBAAkBA,CAAEC,SAAS,EAAG;IAC/B,MAAM;MAAEd,MAAM;MAAEe,UAAU;MAAEX,QAAQ;MAAEY,YAAY;MAAEC;IAAW,CAAC,GAC/D,IAAI,CAACC,KAAK;IACX,MAAM;MAAEN;IAAU,CAAC,GAAG,IAAI,CAACD,KAAK;;IAEhC;IACA;IACA,IAAKI,UAAU,KAAK,OAAO,IAAI,CAAEC,YAAY,EAAG;MAC/C,IAAI,CAACG,WAAW,CAAEnB,MAAM,EAAEI,QAAS,CAAC;MACpC;IACD;IAEA,IACC,CAAEJ,MAAM,KAAKc,SAAS,CAACd,MAAM,IAAIA,MAAM,KAAKY,SAAS,KACrDG,UAAU,KAAK,YAAY,IAC3Bf,MAAM,IACN,CAAEiB,UAAU,EACX;MACD,IAAI,CAACG,aAAa,CAAEpB,MAAO,CAAC;IAC7B;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCmB,WAAWA,CAAEnB,MAAM,EAAEI,QAAQ,EAAG;IAC/BiB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGpB,iBAAiB,CAAEH,MAAM,EAAEI,QAAS,CAAC;EAC7D;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCgB,aAAaA,CAAEpB,MAAM,EAAG;IACvBqB,MAAM,CAACG,OAAO,CAACC,YAAY,CAC1B;MAAEC,EAAE,EAAE1B;IAAO,CAAC,EACd,OAAO,GAAGA,MAAM,EAChBD,cAAc,CAAEC,MAAO,CACxB,CAAC;IAED,IAAI,CAAC2B,QAAQ,CAAE,OAAQ;MACtBf,SAAS,EAAEZ;IACZ,CAAC,CAAG,CAAC;EACN;EAEA4B,MAAMA,CAAA,EAAG;IACR,OAAO,IAAI;EACZ;AACD;AAEA,eAAejC,UAAU,CAAIkC,MAAM,IAAM;EACxC,MAAM;IAAEC,cAAc;IAAEd;EAAa,CAAC,GAAGa,MAAM,CAAE/B,WAAY,CAAC;EAC9D,MAAMG,IAAI,GAAG6B,cAAc,CAAC,CAAC;EAC7B,IAAI;IAAEJ,EAAE;IAAEK,MAAM;IAAEC;EAAK,CAAC,GAAG/B,IAAI;EAC/B,MAAMgC,UAAU,GAAG,CAAE,aAAa,EAAE,kBAAkB,CAAE,CAACC,QAAQ,CAAEF,IAAK,CAAC;EACzE,IAAKC,UAAU,EAAG;IACjBP,EAAE,GAAGzB,IAAI,CAACkC,KAAK;EAChB;EAEA,OAAO;IACNnC,MAAM,EAAE0B,EAAE;IACVX,UAAU,EAAEgB,MAAM;IAClB3B,QAAQ,EAAE4B,IAAI;IACdhB,YAAY,EAAEA,YAAY,CAAC;EAC5B,CAAC;AACF,CAAE,CAAC,CAAER,UAAW,CAAC","ignoreList":[]}