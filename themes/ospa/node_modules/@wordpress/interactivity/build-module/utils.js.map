{"version":3,"names":["useMemo","_useMemo","useCallback","_useCallback","useEffect","_useEffect","useLayoutEffect","_useLayoutEffect","effect","getScope","setScope","resetScope","getNamespace","setNamespace","resetNamespace","afterNextFrame","callback","Promise","resolve","done","clearTimeout","timeout","window","cancelAnimationFrame","raf","setTimeout","requestAnimationFrame","createFlusher","compute","notify","flush","undefined","dispose","c","bind","x","useSignalEffect","eff","isExecuting","withScope","func","scope","ns","constructor","name","args","gen","value","it","next","e","throw","useWatch","useInit","inputs","factory","createRootFragment","parent","replaceNode","concat","sibling","length","nextSibling","insert","child","root","insertBefore","__k","nodeType","parentNode","firstChild","childNodes","appendChild","removeChild"],"sources":["@wordpress/interactivity/src/utils.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tuseMemo as _useMemo,\n\tuseCallback as _useCallback,\n\tuseEffect as _useEffect,\n\tuseLayoutEffect as _useLayoutEffect,\n\ttype EffectCallback,\n\ttype Inputs,\n} from 'preact/hooks';\nimport { effect } from '@preact/signals';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetScope,\n\tsetScope,\n\tresetScope,\n\tgetNamespace,\n\tsetNamespace,\n\tresetNamespace,\n} from './hooks';\n\ninterface Flusher {\n\treadonly flush: () => void;\n\treadonly dispose: () => void;\n}\n\n/**\n * Executes a callback function after the next frame is rendered.\n *\n * @param callback The callback function to be executed.\n * @return A promise that resolves after the callback function is executed.\n */\nconst afterNextFrame = ( callback: () => void ) => {\n\treturn new Promise< void >( ( resolve ) => {\n\t\tconst done = () => {\n\t\t\tclearTimeout( timeout );\n\t\t\twindow.cancelAnimationFrame( raf );\n\t\t\tsetTimeout( () => {\n\t\t\t\tcallback();\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t};\n\t\tconst timeout = setTimeout( done, 100 );\n\t\tconst raf = window.requestAnimationFrame( done );\n\t} );\n};\n\n/**\n * Creates a Flusher object that can be used to flush computed values and notify listeners.\n *\n * Using the mangled properties:\n * this.c: this._callback\n * this.x: this._compute\n * https://github.com/preactjs/signals/blob/main/mangle.json\n *\n * @param compute The function that computes the value to be flushed.\n * @param notify  The function that notifies listeners when the value is flushed.\n * @return The Flusher object with `flush` and `dispose` properties.\n */\nfunction createFlusher( compute: () => unknown, notify: () => void ): Flusher {\n\tlet flush: () => void = () => undefined;\n\tconst dispose = effect( function ( this: any ) {\n\t\tflush = this.c.bind( this );\n\t\tthis.x = compute;\n\t\tthis.c = notify;\n\t\treturn compute();\n\t} );\n\treturn { flush, dispose } as const;\n}\n\n/**\n * Custom hook that executes a callback function whenever a signal is triggered.\n * Version of `useSignalEffect` with a `useEffect`-like execution. This hook\n * implementation comes from this PR, but we added short-cirtuiting to avoid\n * infinite loops: https://github.com/preactjs/signals/pull/290\n *\n * @param callback The callback function to be executed.\n */\nexport function useSignalEffect( callback: () => unknown ) {\n\t_useEffect( () => {\n\t\tlet eff: Flusher | null = null;\n\t\tlet isExecuting = false;\n\n\t\tconst notify = async () => {\n\t\t\tif ( eff && ! isExecuting ) {\n\t\t\t\tisExecuting = true;\n\t\t\t\tawait afterNextFrame( eff.flush );\n\t\t\t\tisExecuting = false;\n\t\t\t}\n\t\t};\n\n\t\teff = createFlusher( callback, notify );\n\t\treturn eff.dispose;\n\t}, [] );\n}\n\n/**\n * Returns the passed function wrapped with the current scope so it is\n * accessible whenever the function runs. This is primarily to make the scope\n * available inside hook callbacks.\n *\n * Asyncronous functions should use generators that yield promises instead of awaiting them.\n * See the documentation for details: https://developer.wordpress.org/block-editor/reference-guides/packages/packages-interactivity/packages-interactivity-api-reference/#the-store\n *\n * @param func The passed function.\n * @return The wrapped function.\n */\nexport function withScope<\n\tFunc extends ( ...args: any[] ) => Generator< any, any >,\n>(\n\tfunc: Func\n): (\n\t...args: Parameters< Func >\n) => ReturnType< Func > extends Generator< any, infer Return >\n\t? Promise< Return >\n\t: never;\nexport function withScope< Func extends Function >( func: Func ): Func;\nexport function withScope( func: ( ...args: unknown[] ) => unknown ) {\n\tconst scope = getScope();\n\tconst ns = getNamespace();\n\tif ( func?.constructor?.name === 'GeneratorFunction' ) {\n\t\treturn async ( ...args: Parameters< typeof func > ) => {\n\t\t\tconst gen = func( ...args ) as Generator;\n\t\t\tlet value: any;\n\t\t\tlet it: any;\n\t\t\twhile ( true ) {\n\t\t\t\tsetNamespace( ns );\n\t\t\t\tsetScope( scope );\n\t\t\t\ttry {\n\t\t\t\t\tit = gen.next( value );\n\t\t\t\t} finally {\n\t\t\t\t\tresetNamespace();\n\t\t\t\t\tresetScope();\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tvalue = await it.value;\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tgen.throw( e );\n\t\t\t\t}\n\t\t\t\tif ( it.done ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\t}\n\treturn ( ...args: Parameters< typeof func > ) => {\n\t\tsetNamespace( ns );\n\t\tsetScope( scope );\n\t\ttry {\n\t\t\treturn func( ...args );\n\t\t} finally {\n\t\t\tresetNamespace();\n\t\t\tresetScope();\n\t\t}\n\t};\n}\n\n/**\n * Accepts a function that contains imperative code which runs whenever any of\n * the accessed _reactive_ properties (e.g., values from the global state or the\n * context) is modified.\n *\n * This hook makes the element's scope available so functions like\n * `getElement()` and `getContext()` can be used inside the passed callback.\n *\n * @param callback The hook callback.\n */\nexport function useWatch( callback: () => unknown ) {\n\tuseSignalEffect( withScope( callback ) );\n}\n\n/**\n * Accepts a function that contains imperative code which runs only after the\n * element's first render, mainly useful for intialization logic.\n *\n * This hook makes the element's scope available so functions like\n * `getElement()` and `getContext()` can be used inside the passed callback.\n *\n * @param callback The hook callback.\n */\nexport function useInit( callback: EffectCallback ) {\n\t_useEffect( withScope( callback ), [] );\n}\n\n/**\n * Accepts a function that contains imperative, possibly effectful code. The\n * effects run after browser paint, without blocking it.\n *\n * This hook is equivalent to Preact's `useEffect` and makes the element's scope\n * available so functions like `getElement()` and `getContext()` can be used\n * inside the passed callback.\n *\n * @param callback Imperative function that can return a cleanup\n *                 function.\n * @param inputs   If present, effect will only activate if the\n *                 values in the list change (using `===`).\n */\nexport function useEffect( callback: EffectCallback, inputs: Inputs ) {\n\t_useEffect( withScope( callback ), inputs );\n}\n\n/**\n * Accepts a function that contains imperative, possibly effectful code. Use\n * this to read layout from the DOM and synchronously re-render.\n *\n * This hook is equivalent to Preact's `useLayoutEffect` and makes the element's\n * scope available so functions like `getElement()` and `getContext()` can be\n * used inside the passed callback.\n *\n * @param callback Imperative function that can return a cleanup\n *                 function.\n * @param inputs   If present, effect will only activate if the\n *                 values in the list change (using `===`).\n */\nexport function useLayoutEffect( callback: EffectCallback, inputs: Inputs ) {\n\t_useLayoutEffect( withScope( callback ), inputs );\n}\n\n/**\n * Returns a memoized version of the callback that only changes if one of the\n * inputs has changed (using `===`).\n *\n * This hook is equivalent to Preact's `useCallback` and makes the element's\n * scope available so functions like `getElement()` and `getContext()` can be\n * used inside the passed callback.\n *\n * @param callback Callback function.\n * @param inputs   If present, the callback will only be updated if the\n *                 values in the list change (using `===`).\n *\n * @return The callback function.\n */\nexport function useCallback< T extends Function >(\n\tcallback: T,\n\tinputs: Inputs\n): T {\n\treturn _useCallback< T >( withScope( callback ), inputs );\n}\n\n/**\n * Pass a factory function and an array of inputs. `useMemo` will only recompute\n * the memoized value when one of the inputs has changed.\n *\n * This hook is equivalent to Preact's `useMemo` and makes the element's scope\n * available so functions like `getElement()` and `getContext()` can be used\n * inside the passed factory function.\n *\n * @param factory Factory function that returns that value for memoization.\n * @param inputs  If present, the factory will only be run to recompute if\n *                the values in the list change (using `===`).\n *\n * @return The memoized value.\n */\nexport function useMemo< T >( factory: () => T, inputs: Inputs ): T {\n\treturn _useMemo( withScope( factory ), inputs );\n}\n\n/**\n * Creates a root fragment by replacing a node or an array of nodes in a parent element.\n * For wrapperless hydration.\n * See https://gist.github.com/developit/f4c67a2ede71dc2fab7f357f39cff28c\n *\n * @param parent      The parent element where the nodes will be replaced.\n * @param replaceNode The node or array of nodes to replace in the parent element.\n * @return The created root fragment.\n */\nexport const createRootFragment = (\n\tparent: Element,\n\treplaceNode: Node | Node[]\n) => {\n\treplaceNode = ( [] as Node[] ).concat( replaceNode );\n\tconst sibling = replaceNode[ replaceNode.length - 1 ].nextSibling;\n\tfunction insert( child: any, root: any ) {\n\t\tparent.insertBefore( child, root || sibling );\n\t}\n\treturn ( ( parent as any ).__k = {\n\t\tnodeType: 1,\n\t\tparentNode: parent,\n\t\tfirstChild: replaceNode[ 0 ],\n\t\tchildNodes: replaceNode,\n\t\tinsertBefore: insert,\n\t\tappendChild: insert,\n\t\tremoveChild( c: Node ) {\n\t\t\tparent.removeChild( c );\n\t\t},\n\t} );\n};\n"],"mappings":"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","ignoreList":[]}