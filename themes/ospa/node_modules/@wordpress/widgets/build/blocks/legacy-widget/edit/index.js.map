{"version":3,"names":["_clsx","_interopRequireDefault","require","_blockEditor","_components","_icons","_i18n","_element","_data","_coreData","_widgetTypeSelector","_inspectorCard","_form","_preview","_noPreview","_convertToBlocksButton","Edit","props","id","idBase","attributes","isWide","blockProps","useBlockProps","className","clsx","_react","createElement","Empty","NotEmpty","setAttributes","Placeholder","icon","BlockIcon","brushIcon","label","__","Flex","FlexBlock","default","selectedId","onSelect","isMulti","instance","clientId","isSelected","hasPreview","setHasPreview","useState","widgetTypeId","record","widgetType","hasResolved","hasResolvedWidgetType","useEntityRecord","isNavigationMode","useSelect","select","blockEditorStore","setInstance","useCallback","nextInstance","Spinner","mode","Fragment","BlockControls","group","rawInstance","raw","InspectorControls","name","description","title","isVisible","onChangeInstance","onChangeHasPreview"],"sources":["@wordpress/widgets/src/blocks/legacy-widget/edit/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseBlockProps,\n\tBlockControls,\n\tInspectorControls,\n\tBlockIcon,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { Flex, FlexBlock, Spinner, Placeholder } from '@wordpress/components';\nimport { brush as brushIcon } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useCallback } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityRecord } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport WidgetTypeSelector from './widget-type-selector';\nimport InspectorCard from './inspector-card';\nimport Form from './form';\nimport Preview from './preview';\nimport NoPreview from './no-preview';\nimport ConvertToBlocksButton from './convert-to-blocks-button';\n\nexport default function Edit( props ) {\n\tconst { id, idBase } = props.attributes;\n\tconst { isWide = false } = props;\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: clsx( {\n\t\t\t'is-wide-widget': isWide,\n\t\t} ),\n\t} );\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t{ ! id && ! idBase ? (\n\t\t\t\t<Empty { ...props } />\n\t\t\t) : (\n\t\t\t\t<NotEmpty { ...props } />\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction Empty( { attributes: { id, idBase }, setAttributes } ) {\n\treturn (\n\t\t<Placeholder\n\t\t\ticon={ <BlockIcon icon={ brushIcon } /> }\n\t\t\tlabel={ __( 'Legacy Widget' ) }\n\t\t>\n\t\t\t<Flex>\n\t\t\t\t<FlexBlock>\n\t\t\t\t\t<WidgetTypeSelector\n\t\t\t\t\t\tselectedId={ id ?? idBase }\n\t\t\t\t\t\tonSelect={ ( { selectedId, isMulti } ) => {\n\t\t\t\t\t\t\tif ( ! selectedId ) {\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tid: null,\n\t\t\t\t\t\t\t\t\tidBase: null,\n\t\t\t\t\t\t\t\t\tinstance: null,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else if ( isMulti ) {\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tid: null,\n\t\t\t\t\t\t\t\t\tidBase: selectedId,\n\t\t\t\t\t\t\t\t\tinstance: {},\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tid: selectedId,\n\t\t\t\t\t\t\t\t\tidBase: null,\n\t\t\t\t\t\t\t\t\tinstance: null,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</FlexBlock>\n\t\t\t</Flex>\n\t\t</Placeholder>\n\t);\n}\n\nfunction NotEmpty( {\n\tattributes: { id, idBase, instance },\n\tsetAttributes,\n\tclientId,\n\tisSelected,\n\tisWide = false,\n} ) {\n\tconst [ hasPreview, setHasPreview ] = useState( null );\n\n\tconst widgetTypeId = id ?? idBase;\n\tconst { record: widgetType, hasResolved: hasResolvedWidgetType } =\n\t\tuseEntityRecord( 'root', 'widgetType', widgetTypeId );\n\n\tconst isNavigationMode = useSelect(\n\t\t( select ) => select( blockEditorStore ).isNavigationMode(),\n\t\t[]\n\t);\n\n\tconst setInstance = useCallback( ( nextInstance ) => {\n\t\tsetAttributes( { instance: nextInstance } );\n\t}, [] );\n\n\tif ( ! widgetType && hasResolvedWidgetType ) {\n\t\treturn (\n\t\t\t<Placeholder\n\t\t\t\ticon={ <BlockIcon icon={ brushIcon } /> }\n\t\t\t\tlabel={ __( 'Legacy Widget' ) }\n\t\t\t>\n\t\t\t\t{ __( 'Widget is missing.' ) }\n\t\t\t</Placeholder>\n\t\t);\n\t}\n\n\tif ( ! hasResolvedWidgetType ) {\n\t\treturn (\n\t\t\t<Placeholder>\n\t\t\t\t<Spinner />\n\t\t\t</Placeholder>\n\t\t);\n\t}\n\n\tconst mode =\n\t\tidBase && ( isNavigationMode || ! isSelected ) ? 'preview' : 'edit';\n\n\treturn (\n\t\t<>\n\t\t\t{ idBase === 'text' && (\n\t\t\t\t<BlockControls group=\"other\">\n\t\t\t\t\t<ConvertToBlocksButton\n\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\trawInstance={ instance.raw }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\n\t\t\t<InspectorControls>\n\t\t\t\t<InspectorCard\n\t\t\t\t\tname={ widgetType.name }\n\t\t\t\t\tdescription={ widgetType.description }\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\n\t\t\t<Form\n\t\t\t\ttitle={ widgetType.name }\n\t\t\t\tisVisible={ mode === 'edit' }\n\t\t\t\tid={ id }\n\t\t\t\tidBase={ idBase }\n\t\t\t\tinstance={ instance }\n\t\t\t\tisWide={ isWide }\n\t\t\t\tonChangeInstance={ setInstance }\n\t\t\t\tonChangeHasPreview={ setHasPreview }\n\t\t\t/>\n\n\t\t\t{ idBase && (\n\t\t\t\t<>\n\t\t\t\t\t{ hasPreview === null && mode === 'preview' && (\n\t\t\t\t\t\t<Placeholder>\n\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t</Placeholder>\n\t\t\t\t\t) }\n\t\t\t\t\t{ hasPreview === true && (\n\t\t\t\t\t\t<Preview\n\t\t\t\t\t\t\tidBase={ idBase }\n\t\t\t\t\t\t\tinstance={ instance }\n\t\t\t\t\t\t\tisVisible={ mode === 'preview' }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ hasPreview === false && mode === 'preview' && (\n\t\t\t\t\t\t<NoPreview name={ widgetType.name } />\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}